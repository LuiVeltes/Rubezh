ТЗ на разработку мультиклиента

Определения
ОЗ - Оперативная Задача
МК - Мультиклиент

Мультиклиент нужен для того, чтобы можно было на одной машине в одном окне просматривать оперативную обстановку на разных серверах
Можно на одном компьютере запустить сразу несколько ОЗ, настроенных на разные сервера. При этом нужно будет вводить логин и пароль для каждой ОЗ. Если необходимость в запуске нескольких экзэмпляров ОЗ возникает на регулярной основе, то это довольно утомительная операция. Возникает необходимость автоматизации процесса запуска. Пользователь должен запустить МК, ввести пароль после авторизации МК запускает в своем окне несколько ОЗ, передавая им адрес сервера/логин/пароль

Физическая структура
МК должен состоять из двух разных программ
- Администратор
- Монитор
Общее между ними - файл с данными. Соответственно, должна быть общая сборка с описанием этих данных
В задачу администратора входит редактирование этих данных
В задачу монитора входит запуск экзэмпляров ОЗ на основе этих данных

Администратор
Для запуска каждой ОЗ(которая является клиентом WCF сервиса) нужны следующие данные
- адрес сервера
- имя пользователя
- пароль
МК должен хранить список этих данных в сериализованном виде на диске, зашифрованных паролем
Этот пароль вводится, когда пользователь входит в МК
С помощью этого пароля происходит расшифровка файла
Если расшифровка прошла удачно, то данные необходимо десериализовать и запустить все необходимые ОЗ
Если расшифровка прошла неудачно, то выдать об этом сообщения и окно с вводом пароля оставить открытым для повторного ввода
Если файла на диске не оказалось, то открыть МК, чтобы пользователь мог создать новый файл конфигурации серверов
В МК должно быть предусмотрено окно с настройкой списка серверов и задания пароля для шифрования. Это нужно в следующих случаях
- когда пользователь запускает МК в первый раз и еще не имеет файл с конфигурацией
- если пароль был утелян, то можно удалить файл с конфигурацие и начать конфигурирования по-новому, как в первый раз

Монитор
Если запустить ОЗ из проводника - то ОЗ сначала покажет окно с вводом имени пользователя и пароля
При запуске из МК такое окно ОЗ показывать не должна. Вместо этого в ОЗ должен быть предусмотрен специальный класс, который запускает ОЗ для МК, которому передаются адрес сервиса, логин и пароль
Предполагается использовать механизм рефлексии для загрузки ОЗ и поиска в ней нужного класса
Следить за жизненным циклом можно, подписавшись, к примеру на некое событие, которое возникает при закрытии окна ОЗ(к приеру, при необработанном исключении)
Следить за ОЗ нужно для того, чтобы можно было оперативно видеть основное состояние ОЗ и то, что это состояние действительно мониторится

дополнительный функционал
- при переходе основного состояния ОЗ в критическое в МК должна показаться именно эта ОЗ а также перенести на передний план МК

Существенным плюсом является то, что можно посмотреть на пример готового МК в рамках старого Firesec (3rdParty/Firesec)

Предполагаемый план работ
- Реализация шифрования файлов, их загрузки и сохранения
- Редактор конфигурации файлов
- Запуск вместо настояших ОЗ некоторых имитаторов, которым можно передать адрес/логин/пароль, и которые они будут показывать
На имитаторах должен быть выпадающий список основного состояния. Это нужно для отработки механизма загрузки, отслеживания жизненного цикла и хостинга в МК
- Вместо имитаторов реальные ОЗ. Этот этат эффективнее сделать мне самому используя опыт имитаторов

Технологии
При разработке следует использовать следуюшие технологии и среды. Для обеспечения консистентности проекта разработку UI следует вести с использование шаблона MVVM и использовать готовую инфраструктуру проекта для показа диалогов и т.д.
- Visual Studio 2010 ru
- sp1 ru(опционально)
- Microsoft .Net Framework 4.0
- C# 4.0
- WPF
- MVVM

Предполагаемый срок исполнения - 1 мес.
Предполагаемая сумма - 20 т.р.
<UserControl x:Class="DiagnosticsModule.Views.DiagnosticsView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:Controls;assembly=Controls" xmlns:extToolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended" xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit" xmlns:viewModel="clr-namespace:DiagnosticsModule.ViewModels" xmlns:Views="clr-namespace:DiagnosticsModule.Views" xmlns:xc="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

	<TabControl>
		<TabItem Header="Отладка">
			<Border Margin="2" Background="White" BorderThickness="0" CornerRadius="10">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<StackPanel Grid.Row="0" Margin="10">
						<Button Width="300" Margin="2" Command="{Binding ShowDriversCommand}" Content="Драйверы" />
						<Button Width="300" Margin="2" Command="{Binding ShowXDriversCommand}" Content="Драйверы ГК" />
						<Button Width="300" Margin="2" Command="{Binding ShowTreeCommand}" Content="Дерево" />
						<Button Width="300" Margin="2" Command="{Binding TreeListViewTestCommand}" Content="TreeListView Test" />
						<Button Width="300" Margin="2" Command="{Binding Test1Command}" Content="Test1" />
						<Button Width="300" Margin="2" Command="{Binding Test2Command}" Content="Test2" />
						<Button Width="300" Margin="2" Command="{Binding Test3Command}" Content="Test3" />
						<Button Width="300" Margin="2" Command="{Binding Test6Command}" Content="Test6" />
						<Button Width="300" Margin="2" Command="{Binding Test7Command}" Content="Test7" />
						<Button Width="300" Margin="2" Command="{Binding Test8Command}" Content="Test8" />
						<Button Width="300" Margin="2" Command="{Binding Test9Command}" Content="Test9" />
						<Button Width="300" Margin="2" Command="{Binding BalloonTestCommand}" Content="Предупреждение из трея" />
						<Button Width="300" Margin="2" Command="{Binding PlanDuplicateTestCommand}" Content="Удвоение планов" />
						<Button Width="300" Margin="2" Command="{Binding MailCommand}" Content="Почта" />
						<Button Width="300" Margin="2" Command="{Binding Test11Command}" Content="Зоны" />
						<Button Width="300" Margin="2" Command="{Binding Test10Command}" Content="Др" />
						<Button Width="300" Margin="2" Command="{Binding IntegrateCommand}" Content="IntegrateCommand" />
						<Button Width="300" Margin="2" Command="{Binding DesintegrateCommand}" Content="DesintegrateCommand" />
						<controls:PopupButton Width="300" Margin="2" Content="Test Popup">
							<controls:PopupButton.PopupContent>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Row="1" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Выравнивать" />
									<Label Grid.Row="2" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет текста" />
									<Label Grid.Row="3" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет фона" />
									<Label Grid.Row="4" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет границы" />
									<Label Grid.Row="5" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Ширина границы" />
									<Label Grid.Row="6" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Размер шрифта" />
									<Label Grid.Row="7" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Шрифт" />
									<Label Grid.Row="8" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Жирный" />
									<Label Grid.Row="9" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Курсив" />
									<Label Grid.Row="10" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Растянуть" />
									<ComboBox Grid.Row="1" Grid.Column="1" Margin="2" />
									<ComboBox Grid.Row="2" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<ComboBox Grid.Row="3" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<ComboBox Grid.Row="4" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<extToolkit:IntegerUpDown Grid.Row="5" Grid.Column="1" Margin="2" Minimum="0" />
									<extToolkit:IntegerUpDown Grid.Row="6" Grid.Column="1" Margin="2" Minimum="5" />
									<ComboBox Grid.Row="7" Grid.Column="1" Margin="2">
										<ComboBox.ItemTemplate>
											<DataTemplate>
												<TextBlock />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
									<CheckBox Grid.Row="8" Grid.Column="1" VerticalAlignment="Center" />
									<CheckBox Grid.Row="9" Grid.Column="1" VerticalAlignment="Center" />
									<CheckBox Grid.Row="10" Grid.Column="1" VerticalAlignment="Center" />
								</Grid>
							</controls:PopupButton.PopupContent>
						</controls:PopupButton>
					</StackPanel>
					<ScrollViewer Grid.Row="1">
						<TextBox Text="{Binding Text}" />
					</ScrollViewer>
				</Grid>
			</Border>
		</TabItem>
		<TabItem Header="FS">
			<Button Width="300" Margin="2" Command="{Binding Test5Command}" Content="WCF Test" />
		</TabItem>
		<TabItem Header="Test Controls" IsSelected="true">
			<StackPanel Width="200" Margin="2" HorizontalAlignment="Left">
				<toolkit:AutoCompleteBox IsTextCompletionEnabled="True" ItemsSource="{Binding AutoCompleteItems}" Text="{Binding AutoText}" />
				<extToolkit:ColorCanvas SelectedColor="{Binding SelectedColor, ElementName=picker, Mode=TwoWay}" />
				<extToolkit:ColorPicker x:Name="picker" DisplayColorAndName="True" ShowRecentColors="True" />
				<extToolkit:Magnifier />
				<Button Margin="2" Click="Button_Click" Content="Click" />
				<xc:ColorPicker x:Name="picker2" Margin="2" DisplayColorAndName="True" ShowRecentColors="True" />
				<xc:ColorPicker Margin="2" DisplayColorAndName="True" ShowRecentColors="True">
					<xc:ColorPicker.Resources>
						<SolidColorBrush x:Key="ButtonHover" Color="#C2E0FF" />
						<SolidColorBrush x:Key="ButtonHoverBorder" Color="#3399FF" />
						<SolidColorBrush x:Key="ButtonChecked" Color="#E6F0FA" />
						<SolidColorBrush x:Key="ButtonPressed" Color="#99CCFF" />
						<SolidColorBrush x:Key="ButtonPressedBorder" Color="#3399FF" />

						<DrawingBrush x:Key="CheckerBrush" TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
							<DrawingBrush.Drawing>
								<DrawingGroup>
									<GeometryDrawing Brush="White">
										<GeometryDrawing.Geometry>
											<RectangleGeometry Rect="0,0 100,100" />
										</GeometryDrawing.Geometry>
									</GeometryDrawing>
									<GeometryDrawing Brush="LightGray">
										<GeometryDrawing.Geometry>
											<GeometryGroup>
												<RectangleGeometry Rect="0,0 50,50" />
												<RectangleGeometry Rect="50,50 50,50" />
											</GeometryGroup>
										</GeometryDrawing.Geometry>
									</GeometryDrawing>
								</DrawingGroup>
							</DrawingBrush.Drawing>
						</DrawingBrush>

						<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
						<conv:InverseBoolConverter xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit" x:Key="InverseBoolConverter" />
						<conv:ColorToSolidColorBrushConverter xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit" x:Key="ColorToSolidColorBrushConverter" />

						<LinearGradientBrush x:Key="ColorPickerDarkBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
							<GradientStop Offset="0" Color="#FFA3AEB9" />
							<GradientStop Offset="0.375" Color="#FF8399A9" />
							<GradientStop Offset="0.375" Color="#FF718597" />
							<GradientStop Offset="1" Color="#FF617584" />
						</LinearGradientBrush>

						<LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
							<LinearGradientBrush.GradientStops>
								<GradientStopCollection>
									<GradientStop Offset="0" Color="#FFffffff" />
									<GradientStop Offset="1" Color="#FFE8EBED" />
								</GradientStopCollection>
							</LinearGradientBrush.GradientStops>
						</LinearGradientBrush>

						<Style x:Key="ColorItemContainerStyle" TargetType="{x:Type ListBoxItem}">
							<Setter Property="ToolTip" Value="{Binding Name}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ListBoxItem}">
										<Grid ToolTip="{Binding Name}">
											<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
											<Border x:Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
												<Border x:Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" />
											</Border>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
												<Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
											</Trigger>
											<Trigger Property="IsSelected" Value="True">
												<Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
												<Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

						<DataTemplate x:Key="ColorItemTemplate">
							<Grid>
								<Border Margin="2,2,2,2" Background="{StaticResource CheckerBrush}" BorderBrush="Black" BorderThickness="1">
									<Rectangle Width="14" Height="14">
										<Rectangle.Style>
											<Style TargetType="Rectangle">
												<Setter Property="Fill" Value="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
											</Style>
										</Rectangle.Style>
									</Rectangle>
								</Border>
							</Grid>
						</DataTemplate>

						<Style x:Key="ColorPickerToggleButtonStyle" TargetType="ToggleButton">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ToggleButton">
										<Grid SnapsToDevicePixels="True">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*" />
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>
												<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
													<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
												</Border>
												<xctk:ButtonChrome x:Name="ToggleButtonChrome" Grid.Column="1" CornerRadius="0,2.75,2.75,0" RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xc:ColorPicker}}" RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xc:ColorPicker}}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Visibility="{Binding ShowDropDownButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xc:ColorPicker}, Converter={StaticResource BooleanToVisibilityConverter}}">
													<Grid x:Name="arrowGlyph" Grid.Column="1" Margin="5" IsHitTestVisible="False">
														<Path x:Name="Arrow" Width="7" Height="4" Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z" Fill="#FF000000" />
													</Grid>
												</xctk:ButtonChrome>
											</Grid>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsEnabled" Value="False">
												<Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
						<Style x:Key="ColorPickerToggleButtonStyle2" TargetType="ToggleButton">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ToggleButton">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition />
												<ColumnDefinition Width="20" />
											</Grid.ColumnDefinitions>
											<Border x:Name="Border" Grid.ColumnSpan="2" Background="{DynamicResource HighlightedBackgoundBrush}" BorderThickness="0" CornerRadius="2" />
											<Border Grid.Column="0" Margin="0" Background="{DynamicResource WindowBackgroundBrush}" BorderThickness="0" CornerRadius="2,0,0,2">
												<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
											</Border>
											<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="White" />
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="ToggleButton.IsMouseOver" Value="true">
												<Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
											</Trigger>
											<Trigger Property="ToggleButton.IsChecked" Value="true">
												<Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
											</Trigger>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
												<Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

						<Style x:Key="ColorDisplayStyle" TargetType="ContentControl">
							<Setter Property="ContentTemplate">
								<Setter.Value>
									<DataTemplate>
										<Border Background="{StaticResource CheckerBrush}">
											<Rectangle Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xc:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
										</Border>
									</DataTemplate>
								</Setter.Value>
							</Setter>
						</Style>

						<Style x:Key="ColorListStyle" TargetType="ListBox">
							<Setter Property="Background" Value="Transparent" />
							<Setter Property="BorderThickness" Value="0" />
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<WrapPanel Width="200" />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
							<Setter Property="ItemContainerStyle" Value="{StaticResource ColorItemContainerStyle}" />
							<Setter Property="ItemTemplate" Value="{StaticResource ColorItemTemplate}" />
							<Setter Property="SelectionMode" Value="Single" />
						</Style>

						<Style TargetType="{x:Type xc:ColorPicker}">
							<Setter Property="Background" Value="White" />
							<Setter Property="BorderBrush" Value="{StaticResource ColorPickerDarkBorderBrush}" />
							<Setter Property="BorderThickness" Value="1,1,1,1" />
							<Setter Property="ButtonStyle" Value="{StaticResource ColorPickerToggleButtonStyle2}" />
							<Setter Property="Focusable" Value="False" />
							<Setter Property="HorizontalContentAlignment" Value="Stretch" />
							<Setter Property="VerticalContentAlignment" Value="Center" />
							<Setter Property="AvailableColorsHeader" Value="Доступные" />
							<Setter Property="StandardColorsHeader" Value="Стандартные" />
							<Setter Property="RecentColorsHeader" Value="Недавние" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type xc:ColorPicker}">
										<Grid>
											<ToggleButton x:Name="PART_ColorPickerToggleButton" MinHeight="22" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsChecked="{Binding IsOpen,
											                                  RelativeSource={RelativeSource TemplatedParent},
											                                  Mode=TwoWay}" IsHitTestVisible="{Binding IsOpen,
											                                         RelativeSource={RelativeSource TemplatedParent},
											                                         Converter={StaticResource InverseBoolConverter}}" IsTabStop="True" Padding="{TemplateBinding Padding}" Style="{TemplateBinding ButtonStyle}">
												<Grid Margin="2">
													<ContentControl x:Name="ColorOnly" Style="{StaticResource ColorDisplayStyle}" />
													<Border x:Name="ColorAndName" Background="White" Visibility="Hidden">
														<StackPanel Orientation="Horizontal">
															<ContentControl Width="20" Margin="2,1,4,1" HorizontalAlignment="Left" BorderBrush="#FFC9CACA" BorderThickness="1" Style="{StaticResource ColorDisplayStyle}" />
															<TextBlock VerticalAlignment="Center" Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}" />
														</StackPanel>
													</Border>
												</Grid>
											</ToggleButton>
											<Popup x:Name="PART_ColorPickerPalettePopup" VerticalAlignment="Bottom" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}" PopupAnimation="Slide" StaysOpen="False" VerticalOffset="3">
												<!--  <Border Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource ColorPickerDarkBorderBrush}" BorderThickness="1" Padding="3">  -->
												<Border x:Name="DropDownBorder" Background="{DynamicResource BaseWindowBackgroundBrush}" BorderBrush="Black" BorderThickness="1" Padding="3" CornerRadius="5">
													<Grid>
														<Grid.RowDefinitions>
															<RowDefinition Height="Auto" />
															<RowDefinition />
															<RowDefinition Height="Auto" />
														</Grid.RowDefinitions>

														<Grid x:Name="_gridStandardColorsHost" Margin="4">
															<Grid.RowDefinitions>
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
															</Grid.RowDefinitions>

															<!--  Available Colors  -->
															<Grid Grid.Row="1" Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto" />
																		<RowDefinition />
																	</Grid.RowDefinitions>
																	<TextBlock Margin="0,0,0,1" Foreground="White" Padding="2" Text="{TemplateBinding AvailableColorsHeader}" />
																	<ListBox x:Name="PART_AvailableColors" Grid.Row="1" ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ColorListStyle}" />
																</Grid>
															</Grid>

															<!--  Standard Colors  -->
															<Grid Grid.Row="2" Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto" />
																		<RowDefinition Height="Auto" />
																	</Grid.RowDefinitions>
																	<TextBlock Margin="0,1,0,1" Foreground="White" Padding="2" Text="{TemplateBinding StandardColorsHeader}" />
																	<ListBox x:Name="PART_StandardColors" Grid.Row="1" ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ColorListStyle}" />
																</Grid>
															</Grid>

															<!--  Recent Colors  -->
															<Grid Grid.Row="3" Margin="0,1,0,1" Visibility="{TemplateBinding ShowRecentColors, Converter={StaticResource BooleanToVisibilityConverter}}">
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto" />
																		<RowDefinition Height="Auto" />
																	</Grid.RowDefinitions>
																	<TextBlock Margin="0,1,0,1" Foreground="White" Padding="2" Text="{TemplateBinding RecentColorsHeader}" />
																	<ListBox x:Name="PART_RecentColors" Grid.Row="1" ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ColorListStyle}" />
																</Grid>
															</Grid>
														</Grid>

														<!--  ColorCanvas  -->
														<Grid x:Name="_colorCanvasHost" Visibility="Collapsed">
															<xc:ColorCanvas x:Name="PART_ColorCanvas" Foreground="White" Background="Transparent" BorderThickness="0" SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}">
																<!--<xc:ColorCanvas.Resources>
																	<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
																		<Setter Property="Foreground" Value="White" />
																	</Style>
																	<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
																		<Setter Property="Foreground" Value="White" />
																	</Style>
																</xc:ColorCanvas.Resources>-->
															</xc:ColorCanvas>
														</Grid>

														<Separator Grid.Row="1" Margin="5,0,5,0" HorizontalAlignment="Stretch" />

														<!--  More Colors Button  -->
														<ToggleButton x:Name="_colorMode" Grid.Row="2" Margin="5" Content="Дополнительные" Visibility="{TemplateBinding ShowAdvancedButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
													</Grid>
												</Border>
											</Popup>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="DisplayColorAndName" Value="True">
												<Setter TargetName="ColorOnly" Property="Visibility" Value="Collapsed" />
												<Setter TargetName="ColorAndName" Property="Visibility" Value="Visible" />
											</Trigger>
											<Trigger SourceName="_colorMode" Property="IsChecked" Value="True">
												<Setter TargetName="_colorMode" Property="Content" Value="Стандартные" />
												<Setter TargetName="_colorCanvasHost" Property="Visibility" Value="Visible" />
												<Setter TargetName="_gridStandardColorsHost" Property="Visibility" Value="Collapsed" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>


					</xc:ColorPicker.Resources>
				</xc:ColorPicker>
				<ComboBox Margin="2" />
				<TextBlock Text="XXX YYY ZZZ" />
			</StackPanel>
		</TabItem>
	</TabControl>
</UserControl>
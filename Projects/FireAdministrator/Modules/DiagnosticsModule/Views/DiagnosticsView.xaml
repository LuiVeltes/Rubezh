<UserControl x:Class="DiagnosticsModule.Views.DiagnosticsView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:Controls;assembly=Controls" xmlns:extToolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended" xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit" xmlns:viewModel="clr-namespace:DiagnosticsModule.ViewModels" xmlns:Views="clr-namespace:DiagnosticsModule.Views" xmlns:xc="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

	<TabControl>
		<TabItem Header="Отладка">
			<Border Margin="2" Background="White" BorderThickness="0" CornerRadius="10">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<StackPanel Grid.Row="0" Margin="10">
						<Button Width="300" Margin="2" Command="{Binding ShowDriversCommand}" Content="Драйверы" />
						<Button Width="300" Margin="2" Command="{Binding ShowXDriversCommand}" Content="Драйверы ГК" />
						<Button Width="300" Margin="2" Command="{Binding ShowTreeCommand}" Content="Дерево" />
						<Button Width="300" Margin="2" Command="{Binding TreeListViewTestCommand}" Content="TreeListView Test" />
						<Button Width="300" Margin="2" Command="{Binding Test1Command}" Content="Test1" />
						<Button Width="300" Margin="2" Command="{Binding Test2Command}" Content="Test2" />
						<Button Width="300" Margin="2" Command="{Binding Test3Command}" Content="Test3" />
						<Button Width="300" Margin="2" Command="{Binding Test6Command}" Content="Test6" />
						<Button Width="300" Margin="2" Command="{Binding Test7Command}" Content="Test7" />
						<Button Width="300" Margin="2" Command="{Binding Test8Command}" Content="Test8" />
						<Button Width="300" Margin="2" Command="{Binding Test9Command}" Content="Test9" />
						<Button Width="300" Margin="2" Command="{Binding BalloonTestCommand}" Content="Предупреждение из трея" />
						<Button Width="300" Margin="2" Command="{Binding PlanDuplicateTestCommand}" Content="Удвоение планов" />
						<Button Width="300" Margin="2" Command="{Binding MailCommand}" Content="Почта" />
						<Button Width="300" Margin="2" Command="{Binding Test11Command}" Content="Зоны" />
						<Button Width="300" Margin="2" Command="{Binding Test10Command}" Content="Др" />
						<Button Width="300" Margin="2" Command="{Binding IntegrateCommand}" Content="IntegrateCommand" />
						<Button Width="300" Margin="2" Command="{Binding DesintegrateCommand}" Content="DesintegrateCommand" />
						<controls:PopupButton Width="300" Margin="2" Content="Test Popup">
							<controls:PopupButton.PopupContent>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Row="1" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Выравнивать" />
									<Label Grid.Row="2" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет текста" />
									<Label Grid.Row="3" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет фона" />
									<Label Grid.Row="4" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет границы" />
									<Label Grid.Row="5" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Ширина границы" />
									<Label Grid.Row="6" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Размер шрифта" />
									<Label Grid.Row="7" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Шрифт" />
									<Label Grid.Row="8" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Жирный" />
									<Label Grid.Row="9" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Курсив" />
									<Label Grid.Row="10" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Растянуть" />
									<ComboBox Grid.Row="1" Grid.Column="1" Margin="2" />
									<ComboBox Grid.Row="2" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<ComboBox Grid.Row="3" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<ComboBox Grid.Row="4" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<extToolkit:IntegerUpDown Grid.Row="5" Grid.Column="1" Margin="2" Minimum="0" />
									<extToolkit:IntegerUpDown Grid.Row="6" Grid.Column="1" Margin="2" Minimum="5" />
									<ComboBox Grid.Row="7" Grid.Column="1" Margin="2">
										<ComboBox.ItemTemplate>
											<DataTemplate>
												<TextBlock />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
									<CheckBox Grid.Row="8" Grid.Column="1" VerticalAlignment="Center" />
									<CheckBox Grid.Row="9" Grid.Column="1" VerticalAlignment="Center" />
									<CheckBox Grid.Row="10" Grid.Column="1" VerticalAlignment="Center" />
								</Grid>
							</controls:PopupButton.PopupContent>
						</controls:PopupButton>
					</StackPanel>
					<ScrollViewer Grid.Row="1">
						<TextBox Text="{Binding Text}" />
					</ScrollViewer>
				</Grid>
			</Border>
		</TabItem>
		<TabItem Header="FS">
			<Button Width="300" Margin="2" Command="{Binding Test5Command}" Content="WCF Test" />
		</TabItem>
		<TabItem Header="Test Controls" IsSelected="true">
			<StackPanel Margin="2" Width="200" HorizontalAlignment="Left">
				<toolkit:AutoCompleteBox IsTextCompletionEnabled="True" ItemsSource="{Binding AutoCompleteItems}" Text="{Binding AutoText}" />
				<extToolkit:ColorCanvas SelectedColor="{Binding SelectedColor, ElementName=picker, Mode=TwoWay}" />
				<extToolkit:ColorPicker x:Name="picker" DisplayColorAndName="True" ShowRecentColors="True" />
				<extToolkit:Magnifier />
				<extToolkit:SplitButton Content="test" />
				<Button Click="Button_Click" Content="Click" Margin="2" />
				<xc:ColorPicker x:Name="picker2" DisplayColorAndName="True" ShowRecentColors="True" Margin="2" />
				<xc:ColorPicker x:Name="picker3" DisplayColorAndName="True" ShowRecentColors="True" Margin="2">
					<xc:ColorPicker.Template>
						<ControlTemplate TargetType="xctk:ColorPicker" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
							<Grid>
								<ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" IsTabStop="True" Padding="{TemplateBinding Control.Padding}" Style="{TemplateBinding xctk:ColorPicker.ButtonStyle}" Name="PART_ColorPickerToggleButton" MinHeight="22" IsHitTestVisible="True">
									<Grid Margin="2,2,2,2">
										<ContentControl Name="ColorOnly">
											<ContentControl.Style>
												<Style TargetType="ContentControl">
													<Style.Resources>
														<ResourceDictionary />
													</Style.Resources>
													<Setter Property="ContentControl.ContentTemplate">
														<Setter.Value>
															<DataTemplate>
																<Border>
																	<Border.Background>
																		<DrawingBrush ViewportUnits="Absolute" Viewport="0,0,10,10" TileMode="Tile">
																			<DrawingBrush.Drawing>
																				<DrawingGroup>
																					<DrawingGroup.Children>
																						<GeometryDrawing Brush="#FFFFFFFF">
																							<GeometryDrawing.Geometry>
																								<RectangleGeometry Rect="0,0,100,100" />
																							</GeometryDrawing.Geometry>
																						</GeometryDrawing>
																						<GeometryDrawing Brush="#FFD3D3D3">
																							<GeometryDrawing.Geometry>
																								<GeometryGroup>
																									<GeometryGroup.Children>
																										<RectangleGeometry Rect="0,0,50,50" />
																										<RectangleGeometry Rect="50,50,50,50" />
																									</GeometryGroup.Children>
																								</GeometryGroup>
																							</GeometryDrawing.Geometry>
																						</GeometryDrawing>
																					</DrawingGroup.Children>
																				</DrawingGroup>
																			</DrawingBrush.Drawing>
																		</DrawingBrush>
																	</Border.Background>
																	<Rectangle Fill="{x:Null}" />
																</Border>
															</DataTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</ContentControl.Style>
										</ContentControl>
										<Border Background="#FFFFFFFF" Name="ColorAndName" Visibility="Hidden">
											<StackPanel Orientation="Horizontal">
												<ContentControl BorderBrush="#FFC9CACA" BorderThickness="1,1,1,1" Width="20" Margin="2,1,4,1" HorizontalAlignment="Left">
													<ContentControl.Style>
														<Style TargetType="ContentControl">
															<Style.Resources>
																<ResourceDictionary />
															</Style.Resources>
															<Setter Property="ContentControl.ContentTemplate">
																<Setter.Value>
																	<DataTemplate>
																		<Border>
																			<Border.Background>
																				<DrawingBrush ViewportUnits="Absolute" Viewport="0,0,10,10" TileMode="Tile">
																					<DrawingBrush.Drawing>
																						<DrawingGroup>
																							<DrawingGroup.Children>
																								<GeometryDrawing Brush="#FFFFFFFF">
																									<GeometryDrawing.Geometry>
																										<RectangleGeometry Rect="0,0,100,100" />
																									</GeometryDrawing.Geometry>
																								</GeometryDrawing>
																								<GeometryDrawing Brush="#FFD3D3D3">
																									<GeometryDrawing.Geometry>
																										<GeometryGroup>
																											<GeometryGroup.Children>
																												<RectangleGeometry Rect="0,0,50,50" />
																												<RectangleGeometry Rect="50,50,50,50" />
																											</GeometryGroup.Children>
																										</GeometryGroup>
																									</GeometryDrawing.Geometry>
																								</GeometryDrawing>
																							</DrawingGroup.Children>
																						</DrawingGroup>
																					</DrawingBrush.Drawing>
																				</DrawingBrush>
																			</Border.Background>
																			<Rectangle Fill="{x:Null}" />
																		</Border>
																	</DataTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</ContentControl.Style>
												</ContentControl>
												<TextBlock Text="" VerticalAlignment="Center" />
											</StackPanel>
										</Border>
									</Grid>
								</ToggleButton>
								<Popup IsOpen="{Binding IsChecked, ElementName=PART_ColorPickerToggleButton}" StaysOpen="False" HorizontalOffset="1" VerticalOffset="1" PopupAnimation="Slide" AllowsTransparency="True" Name="PART_ColorPickerPalettePopup" VerticalAlignment="Bottom" Focusable="False">
									<Border BorderThickness="1,1,1,1" Padding="3,3,3,3">
										<Border.BorderBrush>
											<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
												<LinearGradientBrush.GradientStops>
													<GradientStop Color="#FFA3AEB9" Offset="0" />
													<GradientStop Color="#FF8399A9" Offset="0.375" />
													<GradientStop Color="#FF718597" Offset="0.375" />
													<GradientStop Color="#FF617584" Offset="1" />
												</LinearGradientBrush.GradientStops>
											</LinearGradientBrush>
										</Border.BorderBrush>
										<Border.Background>
											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
												<LinearGradientBrush.GradientStops>
													<GradientStop Color="#FFFFFFFF" Offset="0" />
													<GradientStop Color="#FFE8EBED" Offset="1" />
												</LinearGradientBrush.GradientStops>
											</LinearGradientBrush>
										</Border.Background>
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
												<RowDefinition />
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>
											<Grid Name="_gridStandardColorsHost" Margin="4,4,4,4">
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto" />
													<RowDefinition Height="Auto" />
													<RowDefinition Height="Auto" />
													<RowDefinition Height="Auto" />
												</Grid.RowDefinitions>
												<Grid Grid.Row="1">
													<Grid.Visibility>
														<TemplateBinding Property="xctk:ColorPicker.ShowAvailableColors">
															<TemplateBindingExtension.Converter>
																<BooleanToVisibilityConverter />
															</TemplateBindingExtension.Converter>
														</TemplateBinding>
													</Grid.Visibility>
													<Grid>
														<Grid.RowDefinitions>
															<RowDefinition Height="Auto" />
															<RowDefinition />
														</Grid.RowDefinitions>
														<TextBlock Text="{TemplateBinding xctk:ColorPicker.AvailableColorsHeader}" Background="#FFF0F8FF" Padding="2,2,2,2" Margin="0,0,0,1" />
														<ListBox Name="PART_AvailableColors" Grid.Row="1">
															<ListBox.Style>
																<Style TargetType="ListBox">
																	<Style.Resources>
																		<ResourceDictionary />
																	</Style.Resources>
																	<Setter Property="Panel.Background">
																		<Setter.Value>
																			<SolidColorBrush>#00FFFFFF</SolidColorBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Border.BorderThickness">
																		<Setter.Value>
																			<Thickness>0,0,0,0</Thickness>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ItemsControl.ItemsPanel">
																		<Setter.Value>
																			<ItemsPanelTemplate>
																				<WrapPanel IsItemsHost="True" Width="200" />
																			</ItemsPanelTemplate>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ItemsControl.ItemContainerStyle">
																		<Setter.Value>
																			<Style TargetType="ListBoxItem">
																				<Style.Resources>
																					<ResourceDictionary />
																				</Style.Resources>
																				<Setter Property="ToolTipService.ToolTip">
																					<Setter.Value>
																						<Binding Path="Name" />
																					</Setter.Value>
																				</Setter>
																				<Setter Property="Control.Template">
																					<Setter.Value>
																						<ControlTemplate TargetType="ListBoxItem">
																							<Grid ToolTip="{x:Null}">
																								<ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
																								<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
																									<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
																								</Border>
																							</Grid>
																							<ControlTemplate.Triggers>
																								<Trigger Property="UIElement.IsMouseOver">
																									<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFF0000</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFFFF00</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Trigger.Value>
																										<s:Boolean>True</s:Boolean>
																									</Trigger.Value>
																								</Trigger>
																								<Trigger Property="Selector.IsSelected">
																									<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFF0000</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFFFF00</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Trigger.Value>
																										<s:Boolean>True</s:Boolean>
																									</Trigger.Value>
																								</Trigger>
																							</ControlTemplate.Triggers>
																						</ControlTemplate>
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ItemsControl.ItemTemplate">
																		<Setter.Value>
																			<DataTemplate>
																				<Grid>
																					<Border BorderThickness="1,1,1,1" BorderBrush="#FF000000" Margin="2,2,2,2">
																						<Border.Background>
																							<DrawingBrush ViewportUnits="Absolute" Viewport="0,0,10,10" TileMode="Tile">
																								<DrawingBrush.Drawing>
																									<DrawingGroup>
																										<DrawingGroup.Children>
																											<GeometryDrawing Brush="#FFFFFFFF">
																												<GeometryDrawing.Geometry>
																													<RectangleGeometry Rect="0,0,100,100" />
																												</GeometryDrawing.Geometry>
																											</GeometryDrawing>
																											<GeometryDrawing Brush="#FFD3D3D3">
																												<GeometryDrawing.Geometry>
																													<GeometryGroup>
																														<GeometryGroup.Children>
																															<RectangleGeometry Rect="0,0,50,50" />
																															<RectangleGeometry Rect="50,50,50,50" />
																														</GeometryGroup.Children>
																													</GeometryGroup>
																												</GeometryDrawing.Geometry>
																											</GeometryDrawing>
																										</DrawingGroup.Children>
																									</DrawingGroup>
																								</DrawingBrush.Drawing>
																							</DrawingBrush>
																						</Border.Background>
																						<Rectangle Width="14" Height="14">
																							<Rectangle.Style>
																								<Style TargetType="Rectangle">
																									<Style.Resources>
																										<ResourceDictionary />
																									</Style.Resources>
																									<Setter Property="Shape.Fill">
																										<Setter.Value>
																											<Binding Path="Color">
																												<Binding.Converter>
																													<xctk:ColorToSolidColorBrushConverter />
																												</Binding.Converter>
																											</Binding>
																										</Setter.Value>
																									</Setter>
																								</Style>
																							</Rectangle.Style>
																						</Rectangle>
																					</Border>
																				</Grid>
																			</DataTemplate>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ListBox.SelectionMode">
																		<Setter.Value>
																			<x:Static Member="SelectionMode.Single" />
																		</Setter.Value>
																	</Setter>
																</Style>
															</ListBox.Style>
														</ListBox>
													</Grid>
												</Grid>
												<Grid Grid.Row="2">
													<Grid.Visibility>
														<TemplateBinding Property="xctk:ColorPicker.ShowStandardColors">
															<TemplateBindingExtension.Converter>
																<BooleanToVisibilityConverter />
															</TemplateBindingExtension.Converter>
														</TemplateBinding>
													</Grid.Visibility>
													<Grid>
														<Grid.RowDefinitions>
															<RowDefinition Height="Auto" />
															<RowDefinition Height="Auto" />
														</Grid.RowDefinitions>
														<TextBlock Text="{TemplateBinding xctk:ColorPicker.StandardColorsHeader}" Background="#FFF0F8FF" Padding="2,2,2,2" Margin="0,1,0,1" />
														<ListBox Name="PART_StandardColors" Grid.Row="1">
															<ListBox.Style>
																<Style TargetType="ListBox">
																	<Style.Resources>
																		<ResourceDictionary />
																	</Style.Resources>
																	<Setter Property="Panel.Background">
																		<Setter.Value>
																			<SolidColorBrush>#00FFFFFF</SolidColorBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Border.BorderThickness">
																		<Setter.Value>
																			<Thickness>0,0,0,0</Thickness>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ItemsControl.ItemsPanel">
																		<Setter.Value>
																			<ItemsPanelTemplate>
																				<WrapPanel IsItemsHost="True" Width="200" />
																			</ItemsPanelTemplate>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ItemsControl.ItemContainerStyle">
																		<Setter.Value>
																			<Style TargetType="ListBoxItem">
																				<Style.Resources>
																					<ResourceDictionary />
																				</Style.Resources>
																				<Setter Property="ToolTipService.ToolTip">
																					<Setter.Value>
																						<Binding Path="Name" />
																					</Setter.Value>
																				</Setter>
																				<Setter Property="Control.Template">
																					<Setter.Value>
																						<ControlTemplate TargetType="ListBoxItem">
																							<Grid ToolTip="{x:Null}">
																								<ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
																								<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
																									<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
																								</Border>
																							</Grid>
																							<ControlTemplate.Triggers>
																								<Trigger Property="UIElement.IsMouseOver">
																									<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFF0000</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFFFF00</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Trigger.Value>
																										<s:Boolean>True</s:Boolean>
																									</Trigger.Value>
																								</Trigger>
																								<Trigger Property="Selector.IsSelected">
																									<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFF0000</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFFFF00</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Trigger.Value>
																										<s:Boolean>True</s:Boolean>
																									</Trigger.Value>
																								</Trigger>
																							</ControlTemplate.Triggers>
																						</ControlTemplate>
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ItemsControl.ItemTemplate">
																		<Setter.Value>
																			<DataTemplate>
																				<Grid>
																					<Border BorderThickness="1,1,1,1" BorderBrush="#FF000000" Margin="2,2,2,2">
																						<Border.Background>
																							<DrawingBrush ViewportUnits="Absolute" Viewport="0,0,10,10" TileMode="Tile">
																								<DrawingBrush.Drawing>
																									<DrawingGroup>
																										<DrawingGroup.Children>
																											<GeometryDrawing Brush="#FFFFFFFF">
																												<GeometryDrawing.Geometry>
																													<RectangleGeometry Rect="0,0,100,100" />
																												</GeometryDrawing.Geometry>
																											</GeometryDrawing>
																											<GeometryDrawing Brush="#FFD3D3D3">
																												<GeometryDrawing.Geometry>
																													<GeometryGroup>
																														<GeometryGroup.Children>
																															<RectangleGeometry Rect="0,0,50,50" />
																															<RectangleGeometry Rect="50,50,50,50" />
																														</GeometryGroup.Children>
																													</GeometryGroup>
																												</GeometryDrawing.Geometry>
																											</GeometryDrawing>
																										</DrawingGroup.Children>
																									</DrawingGroup>
																								</DrawingBrush.Drawing>
																							</DrawingBrush>
																						</Border.Background>
																						<Rectangle Width="14" Height="14">
																							<Rectangle.Style>
																								<Style TargetType="Rectangle">
																									<Style.Resources>
																										<ResourceDictionary />
																									</Style.Resources>
																									<Setter Property="Shape.Fill">
																										<Setter.Value>
																											<Binding Path="Color">
																												<Binding.Converter>
																													<xctk:ColorToSolidColorBrushConverter />
																												</Binding.Converter>
																											</Binding>
																										</Setter.Value>
																									</Setter>
																								</Style>
																							</Rectangle.Style>
																						</Rectangle>
																					</Border>
																				</Grid>
																			</DataTemplate>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ListBox.SelectionMode">
																		<Setter.Value>
																			<x:Static Member="SelectionMode.Single" />
																		</Setter.Value>
																	</Setter>
																</Style>
															</ListBox.Style>
														</ListBox>
													</Grid>
												</Grid>
												<Grid Margin="0,1,0,1" Grid.Row="3">
													<Grid.Visibility>
														<TemplateBinding Property="xctk:ColorPicker.ShowRecentColors">
															<TemplateBindingExtension.Converter>
																<BooleanToVisibilityConverter />
															</TemplateBindingExtension.Converter>
														</TemplateBinding>
													</Grid.Visibility>
													<Grid>
														<Grid.RowDefinitions>
															<RowDefinition Height="Auto" />
															<RowDefinition Height="Auto" />
														</Grid.RowDefinitions>
														<TextBlock Text="{TemplateBinding xctk:ColorPicker.RecentColorsHeader}" Background="#FFF0F8FF" Padding="2,2,2,2" Margin="0,1,0,1" />
														<ListBox Name="PART_RecentColors" Grid.Row="1">
															<ListBox.Style>
																<Style TargetType="ListBox">
																	<Style.Resources>
																		<ResourceDictionary />
																	</Style.Resources>
																	<Setter Property="Panel.Background">
																		<Setter.Value>
																			<SolidColorBrush>#00FFFFFF</SolidColorBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Border.BorderThickness">
																		<Setter.Value>
																			<Thickness>0,0,0,0</Thickness>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ItemsControl.ItemsPanel">
																		<Setter.Value>
																			<ItemsPanelTemplate>
																				<WrapPanel IsItemsHost="True" Width="200" />
																			</ItemsPanelTemplate>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ItemsControl.ItemContainerStyle">
																		<Setter.Value>
																			<Style TargetType="ListBoxItem">
																				<Style.Resources>
																					<ResourceDictionary />
																				</Style.Resources>
																				<Setter Property="ToolTipService.ToolTip">
																					<Setter.Value>
																						<Binding Path="Name" />
																					</Setter.Value>
																				</Setter>
																				<Setter Property="Control.Template">
																					<Setter.Value>
																						<ControlTemplate TargetType="ListBoxItem">
																							<Grid ToolTip="{x:Null}">
																								<ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
																								<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
																									<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
																								</Border>
																							</Grid>
																							<ControlTemplate.Triggers>
																								<Trigger Property="UIElement.IsMouseOver">
																									<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFF0000</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFFFF00</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Trigger.Value>
																										<s:Boolean>True</s:Boolean>
																									</Trigger.Value>
																								</Trigger>
																								<Trigger Property="Selector.IsSelected">
																									<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFF0000</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																										<Setter.Value>
																											<SolidColorBrush>#FFFFFF00</SolidColorBrush>
																										</Setter.Value>
																									</Setter>
																									<Trigger.Value>
																										<s:Boolean>True</s:Boolean>
																									</Trigger.Value>
																								</Trigger>
																							</ControlTemplate.Triggers>
																						</ControlTemplate>
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ItemsControl.ItemTemplate">
																		<Setter.Value>
																			<DataTemplate>
																				<Grid>
																					<Border BorderThickness="1,1,1,1" BorderBrush="#FF000000" Margin="2,2,2,2">
																						<Border.Background>
																							<DrawingBrush ViewportUnits="Absolute" Viewport="0,0,10,10" TileMode="Tile">
																								<DrawingBrush.Drawing>
																									<DrawingGroup>
																										<DrawingGroup.Children>
																											<GeometryDrawing Brush="#FFFFFFFF">
																												<GeometryDrawing.Geometry>
																													<RectangleGeometry Rect="0,0,100,100" />
																												</GeometryDrawing.Geometry>
																											</GeometryDrawing>
																											<GeometryDrawing Brush="#FFD3D3D3">
																												<GeometryDrawing.Geometry>
																													<GeometryGroup>
																														<GeometryGroup.Children>
																															<RectangleGeometry Rect="0,0,50,50" />
																															<RectangleGeometry Rect="50,50,50,50" />
																														</GeometryGroup.Children>
																													</GeometryGroup>
																												</GeometryDrawing.Geometry>
																											</GeometryDrawing>
																										</DrawingGroup.Children>
																									</DrawingGroup>
																								</DrawingBrush.Drawing>
																							</DrawingBrush>
																						</Border.Background>
																						<Rectangle Width="14" Height="14">
																							<Rectangle.Style>
																								<Style TargetType="Rectangle">
																									<Style.Resources>
																										<ResourceDictionary />
																									</Style.Resources>
																									<Setter Property="Shape.Fill">
																										<Setter.Value>
																											<Binding Path="Color">
																												<Binding.Converter>
																													<xctk:ColorToSolidColorBrushConverter />
																												</Binding.Converter>
																											</Binding>
																										</Setter.Value>
																									</Setter>
																								</Style>
																							</Rectangle.Style>
																						</Rectangle>
																					</Border>
																				</Grid>
																			</DataTemplate>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="ListBox.SelectionMode">
																		<Setter.Value>
																			<x:Static Member="SelectionMode.Single" />
																		</Setter.Value>
																	</Setter>
																</Style>
															</ListBox.Style>
														</ListBox>
													</Grid>
												</Grid>
											</Grid>
											<Grid Name="_colorCanvasHost" Visibility="Collapsed">
												<xctk:ColorCanvas SelectedColor="#FF000000" UsingAlphaChannel="True" BorderThickness="0,0,0,0" Background="#00FFFFFF" Name="PART_ColorCanvas" />
											</Grid>
											<Separator Margin="5,0,5,0" HorizontalAlignment="Stretch" Grid.Row="1" />
											<ToggleButton Name="_colorMode" Margin="5,5,5,5" Grid.Row="2">
												<ToggleButton.Visibility>
													<TemplateBinding Property="xctk:ColorPicker.ShowAdvancedButton">
														<TemplateBindingExtension.Converter>
															<BooleanToVisibilityConverter />
														</TemplateBindingExtension.Converter>
													</TemplateBinding>
												</ToggleButton.Visibility> Advanced
											</ToggleButton>
										</Grid>
									</Border>
								</Popup>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="xctk:ColorPicker.DisplayColorAndName">
									<Setter Property="UIElement.Visibility" TargetName="ColorOnly">
										<Setter.Value>
											<x:Static Member="Visibility.Collapsed" />
										</Setter.Value>
									</Setter>
									<Setter Property="UIElement.Visibility" TargetName="ColorAndName">
										<Setter.Value>
											<x:Static Member="Visibility.Visible" />
										</Setter.Value>
									</Setter>
									<Trigger.Value>
										<s:Boolean>True</s:Boolean>
									</Trigger.Value>
								</Trigger>
								<Trigger Property="ToggleButton.IsChecked" SourceName="_colorMode">
									<Setter Property="ContentControl.Content" TargetName="_colorMode">
										<Setter.Value>Standard</Setter.Value>
									</Setter>
									<Setter Property="UIElement.Visibility" TargetName="_colorCanvasHost">
										<Setter.Value>
											<x:Static Member="Visibility.Visible" />
										</Setter.Value>
									</Setter>
									<Setter Property="UIElement.Visibility" TargetName="_gridStandardColorsHost">
										<Setter.Value>
											<x:Static Member="Visibility.Collapsed" />
										</Setter.Value>
									</Setter>
									<Trigger.Value>
										<s:Boolean>True</s:Boolean>
									</Trigger.Value>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</xc:ColorPicker.Template>
				</xc:ColorPicker>
				<xc:ColorPicker DisplayColorAndName="True" ShowRecentColors="True" Margin="2">
					<xc:ColorPicker.Resources>
						<Style TargetType="{x:Type xctk:ColorPicker}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
							<Style.Resources>
								<ResourceDictionary />
							</Style.Resources>
							<Setter Property="Panel.Background">
								<Setter.Value>
									<SolidColorBrush>
										#FFFFFFFF</SolidColorBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Border.BorderBrush">
								<Setter.Value>
									<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
										<LinearGradientBrush.GradientStops>
											<GradientStop Color="#FFA3AEB9" Offset="0" />
											<GradientStop Color="#FF8399A9" Offset="0.375" />
											<GradientStop Color="#FF718597" Offset="0.375" />
											<GradientStop Color="#FF617584" Offset="1" />
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Border.BorderThickness">
								<Setter.Value>
									<Thickness>
										1,1,1,1</Thickness>
								</Setter.Value>
							</Setter>
							<Setter Property="xctk:ColorPicker.ButtonStyle">
								<Setter.Value>
									<Style TargetType="{x:Type ToggleButton}">
										<Style.Resources>
											<ResourceDictionary />
										</Style.Resources>
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Grid SnapsToDevicePixels="True">
														<Grid>
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="*" />
																<ColumnDefinition Width="Auto" />
															</Grid.ColumnDefinitions>
															<Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
																<ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
															</Border>
															<xctk:ButtonChrome CornerRadius="0,2.75,2.75,0" InnerCornerRadius="0,1.75,1.75,0" RenderChecked="False" RenderEnabled="True" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" Name="ToggleButtonChrome" Visibility="Visible" Grid.Column="1">
																<Grid Name="arrowGlyph" Margin="5,5,5,5" IsHitTestVisible="False" Grid.Column="1">
																	<Path Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Fill="#FF000000" Name="Arrow" Width="7" Height="4" />
																</Grid>
															</xctk:ButtonChrome>
														</Grid>
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="UIElement.IsEnabled">
															<Setter Property="Shape.Fill" TargetName="Arrow">
																<Setter.Value>
																	<SolidColorBrush>
																		#FFAFAFAF</SolidColorBrush>
																</Setter.Value>
															</Setter>
															<Trigger.Value>
																<s:Boolean>
																	False</s:Boolean>
															</Trigger.Value>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
							<Setter Property="UIElement.Focusable">
								<Setter.Value>
									<s:Boolean>
										False</s:Boolean>
								</Setter.Value>
							</Setter>
							<Setter Property="Control.HorizontalContentAlignment">
								<Setter.Value>
									<x:Static Member="HorizontalAlignment.Stretch" />
								</Setter.Value>
							</Setter>
							<Setter Property="Control.VerticalContentAlignment">
								<Setter.Value>
									<x:Static Member="VerticalAlignment.Center" />
								</Setter.Value>
							</Setter>
							<Setter Property="Control.Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
										<Grid>
											<ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" IsTabStop="True" Padding="{TemplateBinding Control.Padding}" Style="{TemplateBinding xctk:ColorPicker.ButtonStyle}" Name="PART_ColorPickerToggleButton" MinHeight="22" IsHitTestVisible="True">
												<Grid Margin="2,2,2,2">
													<ContentControl Name="ColorOnly">
														<ContentControl.Style>
															<Style TargetType="{x:Type ContentControl}">
																<Style.Resources>
																	<ResourceDictionary />
																</Style.Resources>
																<Setter Property="ContentControl.ContentTemplate">
																	<Setter.Value>
																		<DataTemplate>
																			<Border>
																				<Border.Background>
																					<DrawingBrush ViewportUnits="Absolute" Viewport="0,0,10,10" TileMode="Tile">
																						<DrawingBrush.Drawing>
																							<DrawingGroup>
																								<DrawingGroup.Children>
																									<GeometryDrawing Brush="#FFFFFFFF">
																										<GeometryDrawing.Geometry>
																											<RectangleGeometry Rect="0,0,100,100" />
																										</GeometryDrawing.Geometry>
																									</GeometryDrawing>
																									<GeometryDrawing Brush="#FFD3D3D3">
																										<GeometryDrawing.Geometry>
																											<GeometryGroup>
																												<GeometryGroup.Children>
																													<RectangleGeometry Rect="0,0,50,50" />
																													<RectangleGeometry Rect="50,50,50,50" />
																												</GeometryGroup.Children>
																											</GeometryGroup>
																										</GeometryDrawing.Geometry>
																									</GeometryDrawing>
																								</DrawingGroup.Children>
																							</DrawingGroup>
																						</DrawingBrush.Drawing>
																					</DrawingBrush>
																				</Border.Background>
																				<Rectangle Fill="{x:Null}" />
																			</Border>
																		</DataTemplate>
																	</Setter.Value>
																</Setter>
															</Style>
														</ContentControl.Style>
													</ContentControl>
													<Border Background="#FFFFFFFF" Name="ColorAndName" Visibility="Hidden">
														<StackPanel Orientation="Horizontal">
															<ContentControl BorderBrush="#FFC9CACA" BorderThickness="1,1,1,1" Width="20" Margin="2,1,4,1" HorizontalAlignment="Left">
																<ContentControl.Style>
																	<Style TargetType="{x:Type ContentControl}">
																		<Style.Resources>
																			<ResourceDictionary />
																		</Style.Resources>
																		<Setter Property="ContentControl.ContentTemplate">
																			<Setter.Value>
																				<DataTemplate>
																					<Border>
																						<Border.Background>
																							<DrawingBrush ViewportUnits="Absolute" Viewport="0,0,10,10" TileMode="Tile">
																								<DrawingBrush.Drawing>
																									<DrawingGroup>
																										<DrawingGroup.Children>
																											<GeometryDrawing Brush="#FFFFFFFF">
																												<GeometryDrawing.Geometry>
																													<RectangleGeometry Rect="0,0,100,100" />
																												</GeometryDrawing.Geometry>
																											</GeometryDrawing>
																											<GeometryDrawing Brush="#FFD3D3D3">
																												<GeometryDrawing.Geometry>
																													<GeometryGroup>
																														<GeometryGroup.Children>
																															<RectangleGeometry Rect="0,0,50,50" />
																															<RectangleGeometry Rect="50,50,50,50" />
																														</GeometryGroup.Children>
																													</GeometryGroup>
																												</GeometryDrawing.Geometry>
																											</GeometryDrawing>
																										</DrawingGroup.Children>
																									</DrawingGroup>
																								</DrawingBrush.Drawing>
																							</DrawingBrush>
																						</Border.Background>
																						<Rectangle Fill="{x:Null}" />
																					</Border>
																				</DataTemplate>
																			</Setter.Value>
																		</Setter>
																	</Style>
																</ContentControl.Style>
															</ContentControl>
															<TextBlock Text="" VerticalAlignment="Center" />
														</StackPanel>
													</Border>
												</Grid>
											</ToggleButton>
											<Popup IsOpen="False" StaysOpen="False" HorizontalOffset="1" VerticalOffset="1" PopupAnimation="Slide" AllowsTransparency="True" Name="PART_ColorPickerPalettePopup" VerticalAlignment="Bottom" Focusable="False">
												<Border BorderThickness="1,1,1,1" Padding="3,3,3,3">
													<Border.BorderBrush>
														<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
															<LinearGradientBrush.GradientStops>
																<GradientStop Color="#FFA3AEB9" Offset="0" />
																<GradientStop Color="#FF8399A9" Offset="0.375" />
																<GradientStop Color="#FF718597" Offset="0.375" />
																<GradientStop Color="#FF617584" Offset="1" />
															</LinearGradientBrush.GradientStops>
														</LinearGradientBrush>
													</Border.BorderBrush>
													<Border.Background>
														<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
															<LinearGradientBrush.GradientStops>
																<GradientStop Color="#FFFFFFFF" Offset="0" />
																<GradientStop Color="#FFE8EBED" Offset="1" />
															</LinearGradientBrush.GradientStops>
														</LinearGradientBrush>
													</Border.Background>
													<Grid>
														<Grid.RowDefinitions>
															<RowDefinition Height="Auto" />
															<RowDefinition />
															<RowDefinition Height="Auto" />
														</Grid.RowDefinitions>
														<Grid Name="_gridStandardColorsHost" Margin="4,4,4,4">
															<Grid.RowDefinitions>
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
															</Grid.RowDefinitions>
															<Grid Grid.Row="1">
																<Grid.Visibility>
																	<TemplateBinding Property="xctk:ColorPicker.ShowAvailableColors">
																		<TemplateBindingExtension.Converter>
																			<BooleanToVisibilityConverter />
																		</TemplateBindingExtension.Converter>
																	</TemplateBinding>
																</Grid.Visibility>
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto" />
																		<RowDefinition />
																	</Grid.RowDefinitions>
																	<TextBlock Text="{TemplateBinding xctk:ColorPicker.AvailableColorsHeader}" Background="#FFF0F8FF" Padding="2,2,2,2" Margin="0,0,0,1" />
																	<ListBox Name="PART_AvailableColors" Grid.Row="1">
																		<ListBox.Style>
																			<Style TargetType="{x:Type ListBox}">
																				<Style.Resources>
																					<ResourceDictionary />
																				</Style.Resources>
																				<Setter Property="Panel.Background">
																					<Setter.Value>
																						<SolidColorBrush>
																							#00FFFFFF</SolidColorBrush>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="Border.BorderThickness">
																					<Setter.Value>
																						<Thickness>
																							0,0,0,0</Thickness>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ItemsControl.ItemsPanel">
																					<Setter.Value>
																						<ItemsPanelTemplate>
																							<WrapPanel IsItemsHost="True" Width="200" />
																						</ItemsPanelTemplate>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ItemsControl.ItemContainerStyle">
																					<Setter.Value>
																						<Style TargetType="{x:Type ListBoxItem}">
																							<Style.Resources>
																								<ResourceDictionary />
																							</Style.Resources>
																							<Setter Property="ToolTipService.ToolTip">
																								<Setter.Value>
																									<Binding Path="Name" />
																								</Setter.Value>
																							</Setter>
																							<Setter Property="Control.Template">
																								<Setter.Value>
																									<ControlTemplate TargetType="{x:Type ListBoxItem}">
																										<Grid ToolTip="{x:Null}">
																											<ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
																											<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
																												<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
																											</Border>
																										</Grid>
																										<ControlTemplate.Triggers>
																											<Trigger Property="UIElement.IsMouseOver">
																												<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFF0000</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFFFF00</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Trigger.Value>
																													<s:Boolean>
																														True</s:Boolean>
																												</Trigger.Value>
																											</Trigger>
																											<Trigger Property="Selector.IsSelected">
																												<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFF0000</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFFFF00</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Trigger.Value>
																													<s:Boolean>
																														True</s:Boolean>
																												</Trigger.Value>
																											</Trigger>
																										</ControlTemplate.Triggers>
																									</ControlTemplate>
																								</Setter.Value>
																							</Setter>
																						</Style>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ItemsControl.ItemTemplate">
																					<Setter.Value>
																						<DataTemplate>
																							<Grid>
																								<Border BorderThickness="1,1,1,1" BorderBrush="#FF000000" Margin="2,2,2,2">
																									<Border.Background>
																										<DrawingBrush ViewportUnits="Absolute" Viewport="0,0,10,10" TileMode="Tile">
																											<DrawingBrush.Drawing>
																												<DrawingGroup>
																													<DrawingGroup.Children>
																														<GeometryDrawing Brush="#FFFFFFFF">
																															<GeometryDrawing.Geometry>
																																<RectangleGeometry Rect="0,0,100,100" />
																															</GeometryDrawing.Geometry>
																														</GeometryDrawing>
																														<GeometryDrawing Brush="#FFD3D3D3">
																															<GeometryDrawing.Geometry>
																																<GeometryGroup>
																																	<GeometryGroup.Children>
																																		<RectangleGeometry Rect="0,0,50,50" />
																																		<RectangleGeometry Rect="50,50,50,50" />
																																	</GeometryGroup.Children>
																																</GeometryGroup>
																															</GeometryDrawing.Geometry>
																														</GeometryDrawing>
																													</DrawingGroup.Children>
																												</DrawingGroup>
																											</DrawingBrush.Drawing>
																										</DrawingBrush>
																									</Border.Background>
																									<Rectangle Width="14" Height="14">
																										<Rectangle.Style>
																											<Style TargetType="{x:Type Rectangle}">
																												<Style.Resources>
																													<ResourceDictionary />
																												</Style.Resources>
																												<Setter Property="Shape.Fill">
																													<Setter.Value>
																														<Binding Path="Color">
																															<Binding.Converter>
																																<xctk:ColorToSolidColorBrushConverter />
																															</Binding.Converter>
																														</Binding>
																													</Setter.Value>
																												</Setter>
																											</Style>
																										</Rectangle.Style>
																									</Rectangle>
																								</Border>
																							</Grid>
																						</DataTemplate>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ListBox.SelectionMode">
																					<Setter.Value>
																						<x:Static Member="SelectionMode.Single" />
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</ListBox.Style>
																	</ListBox>
																</Grid>
															</Grid>
															<Grid Grid.Row="2">
																<Grid.Visibility>
																	<TemplateBinding Property="xctk:ColorPicker.ShowStandardColors">
																		<TemplateBindingExtension.Converter>
																			<BooleanToVisibilityConverter />
																		</TemplateBindingExtension.Converter>
																	</TemplateBinding>
																</Grid.Visibility>
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto" />
																		<RowDefinition Height="Auto" />
																	</Grid.RowDefinitions>
																	<TextBlock Text="{TemplateBinding xctk:ColorPicker.StandardColorsHeader}" Background="#FFF0F8FF" Padding="2,2,2,2" Margin="0,1,0,1" />
																	<ListBox Name="PART_StandardColors" Grid.Row="1">
																		<ListBox.Style>
																			<Style TargetType="{x:Type ListBox}">
																				<Style.Resources>
																					<ResourceDictionary />
																				</Style.Resources>
																				<Setter Property="Panel.Background">
																					<Setter.Value>
																						<SolidColorBrush>
																							#00FFFFFF</SolidColorBrush>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="Border.BorderThickness">
																					<Setter.Value>
																						<Thickness>
																							0,0,0,0</Thickness>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ItemsControl.ItemsPanel">
																					<Setter.Value>
																						<ItemsPanelTemplate>
																							<WrapPanel IsItemsHost="True" Width="200" />
																						</ItemsPanelTemplate>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ItemsControl.ItemContainerStyle">
																					<Setter.Value>
																						<Style TargetType="{x:Type ListBoxItem}">
																							<Style.Resources>
																								<ResourceDictionary />
																							</Style.Resources>
																							<Setter Property="ToolTipService.ToolTip">
																								<Setter.Value>
																									<Binding Path="Name" />
																								</Setter.Value>
																							</Setter>
																							<Setter Property="Control.Template">
																								<Setter.Value>
																									<ControlTemplate TargetType="{x:Type ListBoxItem}">
																										<Grid ToolTip="{x:Null}">
																											<ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
																											<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
																												<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
																											</Border>
																										</Grid>
																										<ControlTemplate.Triggers>
																											<Trigger Property="UIElement.IsMouseOver">
																												<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFF0000</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFFFF00</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Trigger.Value>
																													<s:Boolean>
																														True</s:Boolean>
																												</Trigger.Value>
																											</Trigger>
																											<Trigger Property="Selector.IsSelected">
																												<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFF0000</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFFFF00</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Trigger.Value>
																													<s:Boolean>
																														True</s:Boolean>
																												</Trigger.Value>
																											</Trigger>
																										</ControlTemplate.Triggers>
																									</ControlTemplate>
																								</Setter.Value>
																							</Setter>
																						</Style>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ItemsControl.ItemTemplate">
																					<Setter.Value>
																						<DataTemplate>
																							<Grid>
																								<Border BorderThickness="1,1,1,1" BorderBrush="#FF000000" Margin="2,2,2,2">
																									<Border.Background>
																										<DrawingBrush ViewportUnits="Absolute" Viewport="0,0,10,10" TileMode="Tile">
																											<DrawingBrush.Drawing>
																												<DrawingGroup>
																													<DrawingGroup.Children>
																														<GeometryDrawing Brush="#FFFFFFFF">
																															<GeometryDrawing.Geometry>
																																<RectangleGeometry Rect="0,0,100,100" />
																															</GeometryDrawing.Geometry>
																														</GeometryDrawing>
																														<GeometryDrawing Brush="#FFD3D3D3">
																															<GeometryDrawing.Geometry>
																																<GeometryGroup>
																																	<GeometryGroup.Children>
																																		<RectangleGeometry Rect="0,0,50,50" />
																																		<RectangleGeometry Rect="50,50,50,50" />
																																	</GeometryGroup.Children>
																																</GeometryGroup>
																															</GeometryDrawing.Geometry>
																														</GeometryDrawing>
																													</DrawingGroup.Children>
																												</DrawingGroup>
																											</DrawingBrush.Drawing>
																										</DrawingBrush>
																									</Border.Background>
																									<Rectangle Width="14" Height="14">
																										<Rectangle.Style>
																											<Style TargetType="{x:Type Rectangle}">
																												<Style.Resources>
																													<ResourceDictionary />
																												</Style.Resources>
																												<Setter Property="Shape.Fill">
																													<Setter.Value>
																														<Binding Path="Color">
																															<Binding.Converter>
																																<xctk:ColorToSolidColorBrushConverter />
																															</Binding.Converter>
																														</Binding>
																													</Setter.Value>
																												</Setter>
																											</Style>
																										</Rectangle.Style>
																									</Rectangle>
																								</Border>
																							</Grid>
																						</DataTemplate>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ListBox.SelectionMode">
																					<Setter.Value>
																						<x:Static Member="SelectionMode.Single" />
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</ListBox.Style>
																	</ListBox>
																</Grid>
															</Grid>
															<Grid Margin="0,1,0,1" Grid.Row="3">
																<Grid.Visibility>
																	<TemplateBinding Property="xctk:ColorPicker.ShowRecentColors">
																		<TemplateBindingExtension.Converter>
																			<BooleanToVisibilityConverter />
																		</TemplateBindingExtension.Converter>
																	</TemplateBinding>
																</Grid.Visibility>
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto" />
																		<RowDefinition Height="Auto" />
																	</Grid.RowDefinitions>
																	<TextBlock Text="{TemplateBinding xctk:ColorPicker.RecentColorsHeader}" Background="#FFF0F8FF" Padding="2,2,2,2" Margin="0,1,0,1" />
																	<ListBox Name="PART_RecentColors" Grid.Row="1">
																		<ListBox.Style>
																			<Style TargetType="{x:Type ListBox}">
																				<Style.Resources>
																					<ResourceDictionary />
																				</Style.Resources>
																				<Setter Property="Panel.Background">
																					<Setter.Value>
																						<SolidColorBrush>
																							#00FFFFFF</SolidColorBrush>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="Border.BorderThickness">
																					<Setter.Value>
																						<Thickness>
																							0,0,0,0</Thickness>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ItemsControl.ItemsPanel">
																					<Setter.Value>
																						<ItemsPanelTemplate>
																							<WrapPanel IsItemsHost="True" Width="200" />
																						</ItemsPanelTemplate>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ItemsControl.ItemContainerStyle">
																					<Setter.Value>
																						<Style TargetType="{x:Type ListBoxItem}">
																							<Style.Resources>
																								<ResourceDictionary />
																							</Style.Resources>
																							<Setter Property="ToolTipService.ToolTip">
																								<Setter.Value>
																									<Binding Path="Name" />
																								</Setter.Value>
																							</Setter>
																							<Setter Property="Control.Template">
																								<Setter.Value>
																									<ControlTemplate TargetType="{x:Type ListBoxItem}">
																										<Grid ToolTip="{x:Null}">
																											<ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
																											<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
																												<Border BorderThickness="1,1,1,1" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
																											</Border>
																										</Grid>
																										<ControlTemplate.Triggers>
																											<Trigger Property="UIElement.IsMouseOver">
																												<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFF0000</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFFFF00</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Trigger.Value>
																													<s:Boolean>
																														True</s:Boolean>
																												</Trigger.Value>
																											</Trigger>
																											<Trigger Property="Selector.IsSelected">
																												<Setter Property="Border.BorderBrush" TargetName="_outerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFF0000</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Setter Property="Border.BorderBrush" TargetName="_innerBorder">
																													<Setter.Value>
																														<SolidColorBrush>
																															#FFFFFF00</SolidColorBrush>
																													</Setter.Value>
																												</Setter>
																												<Trigger.Value>
																													<s:Boolean>
																														True</s:Boolean>
																												</Trigger.Value>
																											</Trigger>
																										</ControlTemplate.Triggers>
																									</ControlTemplate>
																								</Setter.Value>
																							</Setter>
																						</Style>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ItemsControl.ItemTemplate">
																					<Setter.Value>
																						<DataTemplate>
																							<Grid>
																								<Border BorderThickness="1,1,1,1" BorderBrush="#FF000000" Margin="2,2,2,2">
																									<Border.Background>
																										<DrawingBrush ViewportUnits="Absolute" Viewport="0,0,10,10" TileMode="Tile">
																											<DrawingBrush.Drawing>
																												<DrawingGroup>
																													<DrawingGroup.Children>
																														<GeometryDrawing Brush="#FFFFFFFF">
																															<GeometryDrawing.Geometry>
																																<RectangleGeometry Rect="0,0,100,100" />
																															</GeometryDrawing.Geometry>
																														</GeometryDrawing>
																														<GeometryDrawing Brush="#FFD3D3D3">
																															<GeometryDrawing.Geometry>
																																<GeometryGroup>
																																	<GeometryGroup.Children>
																																		<RectangleGeometry Rect="0,0,50,50" />
																																		<RectangleGeometry Rect="50,50,50,50" />
																																	</GeometryGroup.Children>
																																</GeometryGroup>
																															</GeometryDrawing.Geometry>
																														</GeometryDrawing>
																													</DrawingGroup.Children>
																												</DrawingGroup>
																											</DrawingBrush.Drawing>
																										</DrawingBrush>
																									</Border.Background>
																									<Rectangle Width="14" Height="14">
																										<Rectangle.Style>
																											<Style TargetType="{x:Type Rectangle}">
																												<Style.Resources>
																													<ResourceDictionary />
																												</Style.Resources>
																												<Setter Property="Shape.Fill">
																													<Setter.Value>
																														<Binding Path="Color">
																															<Binding.Converter>
																																<xctk:ColorToSolidColorBrushConverter />
																															</Binding.Converter>
																														</Binding>
																													</Setter.Value>
																												</Setter>
																											</Style>
																										</Rectangle.Style>
																									</Rectangle>
																								</Border>
																							</Grid>
																						</DataTemplate>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="ListBox.SelectionMode">
																					<Setter.Value>
																						<x:Static Member="SelectionMode.Single" />
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</ListBox.Style>
																	</ListBox>
																</Grid>
															</Grid>
														</Grid>
														<Grid Name="_colorCanvasHost" Visibility="Collapsed">
															<xctk:ColorCanvas SelectedColor="#FF000000" UsingAlphaChannel="True" BorderThickness="0,0,0,0" Background="#00FFFFFF" Name="PART_ColorCanvas" />
														</Grid>
														<Separator Margin="5,0,5,0" HorizontalAlignment="Stretch" Grid.Row="1" />
														<ToggleButton Name="_colorMode" Margin="5,5,5,5" Grid.Row="2">
															<ToggleButton.Visibility>
																<TemplateBinding Property="xctk:ColorPicker.ShowAdvancedButton">
																	<TemplateBindingExtension.Converter>
																		<BooleanToVisibilityConverter />
																	</TemplateBindingExtension.Converter>
																</TemplateBinding>
															</ToggleButton.Visibility>
															Advanced
														</ToggleButton>
													</Grid>
												</Border>
											</Popup>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="xctk:ColorPicker.DisplayColorAndName">
												<Setter Property="UIElement.Visibility" TargetName="ColorOnly">
													<Setter.Value>
														<x:Static Member="Visibility.Collapsed" />
													</Setter.Value>
												</Setter>
												<Setter Property="UIElement.Visibility" TargetName="ColorAndName">
													<Setter.Value>
														<x:Static Member="Visibility.Visible" />
													</Setter.Value>
												</Setter>
												<Trigger.Value>
													<s:Boolean>
														True</s:Boolean>
												</Trigger.Value>
											</Trigger>
											<Trigger Property="ToggleButton.IsChecked" SourceName="_colorMode">
												<Setter Property="ContentControl.Content" TargetName="_colorMode">
													<Setter.Value>
														Standard</Setter.Value>
												</Setter>
												<Setter Property="UIElement.Visibility" TargetName="_colorCanvasHost">
													<Setter.Value>
														<x:Static Member="Visibility.Visible" />
													</Setter.Value>
												</Setter>
												<Setter Property="UIElement.Visibility" TargetName="_gridStandardColorsHost">
													<Setter.Value>
														<x:Static Member="Visibility.Collapsed" />
													</Setter.Value>
												</Setter>
												<Trigger.Value>
													<s:Boolean>
														True</s:Boolean>
												</Trigger.Value>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</xc:ColorPicker.Resources>
				</xc:ColorPicker>
				<xc:ColorPicker DisplayColorAndName="True" ShowRecentColors="True" Margin="2">
					<xc:ColorPicker.Resources>
						<SolidColorBrush x:Key="ButtonHover" Color="#C2E0FF" />
						<SolidColorBrush x:Key="ButtonHoverBorder" Color="#3399FF" />
						<SolidColorBrush x:Key="ButtonChecked" Color="#E6F0FA" />
						<SolidColorBrush x:Key="ButtonPressed" Color="#99CCFF" />
						<SolidColorBrush x:Key="ButtonPressedBorder" Color="#3399FF" />

						<DrawingBrush x:Key="CheckerBrush" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
							<DrawingBrush.Drawing>
								<DrawingGroup>
									<GeometryDrawing Brush="White">
										<GeometryDrawing.Geometry>
											<RectangleGeometry Rect="0,0 100,100" />
										</GeometryDrawing.Geometry>
									</GeometryDrawing>
									<GeometryDrawing Brush="LightGray">
										<GeometryDrawing.Geometry>
											<GeometryGroup>
												<RectangleGeometry Rect="0,0 50,50" />
												<RectangleGeometry Rect="50,50 50,50" />
											</GeometryGroup>
										</GeometryDrawing.Geometry>
									</GeometryDrawing>
								</DrawingGroup>
							</DrawingBrush.Drawing>
						</DrawingBrush>

						<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
						<conv:InverseBoolConverter x:Key="InverseBoolConverter" xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit" />
						<conv:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit" />

						<LinearGradientBrush x:Key="ColorPickerDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFA3AEB9" Offset="0" />
							<GradientStop Color="#FF8399A9" Offset="0.375" />
							<GradientStop Color="#FF718597" Offset="0.375" />
							<GradientStop Color="#FF617584" Offset="1" />
						</LinearGradientBrush>

						<LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
							<LinearGradientBrush.GradientStops>
								<GradientStopCollection>
									<GradientStop Offset="0" Color="#FFffffff" />
									<GradientStop Offset="1" Color="#FFE8EBED" />
								</GradientStopCollection>
							</LinearGradientBrush.GradientStops>
						</LinearGradientBrush>

						<Style x:Key="ColorItemContainerStyle" TargetType="{x:Type ListBoxItem}">
							<Setter Property="ToolTip" Value="{Binding Name}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ListBoxItem}">
										<Grid ToolTip="{Binding Name}">
											<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
											<Border BorderThickness="1" Background="Transparent" BorderBrush="Transparent" x:Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
												<Border Background="Transparent" BorderThickness="1" BorderBrush="Transparent" x:Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
											</Border>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
												<Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
											</Trigger>
											<Trigger Property="IsSelected" Value="True">
												<Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
												<Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

						<DataTemplate x:Key="ColorItemTemplate">
							<Grid>
								<Border Background="{StaticResource CheckerBrush}" BorderBrush="Black" BorderThickness="1" Margin="2,2,2,2">
									<Rectangle Width="14" Height="14">
										<Rectangle.Style>
											<Style TargetType="Rectangle">
												<Setter Property="Fill" Value="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
											</Style>
										</Rectangle.Style>
									</Rectangle>
								</Border>
							</Grid>
						</DataTemplate>

						<Style x:Key="ColorPickerToggleButtonStyle" TargetType="ToggleButton">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ToggleButton">
										<Grid SnapsToDevicePixels="True">

											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*" />
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>

												<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
													<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
												</Border>

												<xctk:ButtonChrome x:Name="ToggleButtonChrome" Grid.Column="1" CornerRadius="0,2.75,2.75,0" Visibility="{Binding ShowDropDownButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xc:ColorPicker}, Converter={StaticResource BooleanToVisibilityConverter}}" RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xc:ColorPicker}}" RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xc:ColorPicker}}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">

													<Grid x:Name="arrowGlyph" IsHitTestVisible="False" Grid.Column="1" Margin="5">
														<Path x:Name="Arrow" Width="7" Height="4" Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z" Fill="#FF000000" />
													</Grid>
												</xctk:ButtonChrome>
											</Grid>

										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

						<Style x:Key="ColorDisplayStyle" TargetType="ContentControl">
							<Setter Property="ContentTemplate">
								<Setter.Value>
									<DataTemplate>
										<Border Background="{StaticResource CheckerBrush}">
											<Rectangle Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xc:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
										</Border>
									</DataTemplate>
								</Setter.Value>
							</Setter>
						</Style>

						<Style x:Key="ColorListStyle" TargetType="ListBox">
							<Setter Property="Background" Value="Transparent" />
							<Setter Property="BorderThickness" Value="0" />
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<WrapPanel Width="200" />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
							<Setter Property="ItemContainerStyle" Value="{StaticResource ColorItemContainerStyle}" />
							<Setter Property="ItemTemplate" Value="{StaticResource ColorItemTemplate}" />
							<Setter Property="SelectionMode" Value="Single" />
						</Style>

						<Style TargetType="{x:Type xc:ColorPicker}">
							<Setter Property="Background" Value="White" />
							<Setter Property="BorderBrush" Value="{StaticResource ColorPickerDarkBorderBrush}" />
							<Setter Property="BorderThickness" Value="1,1,1,1" />
							<Setter Property="ButtonStyle" Value="{StaticResource ColorPickerToggleButtonStyle}" />
							<Setter Property="Focusable" Value="False" />
							<Setter Property="HorizontalContentAlignment" Value="Stretch" />
							<Setter Property="VerticalContentAlignment" Value="Center" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type xc:ColorPicker}">
										<Grid>
											<ToggleButton x:Name="PART_ColorPickerToggleButton" IsTabStop="True" MinHeight="22" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}" Style="{TemplateBinding ButtonStyle}">
												<Grid Margin="2">
													<ContentControl x:Name="ColorOnly" Style="{StaticResource ColorDisplayStyle}" />

													<Border x:Name="ColorAndName" Background="White" Visibility="Hidden">
														<StackPanel Orientation="Horizontal">
															<ContentControl HorizontalAlignment="Left" Width="20" Margin="2,1,4,1" Style="{StaticResource ColorDisplayStyle}" BorderThickness="1" BorderBrush="#FFC9CACA" />
															<TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
														</StackPanel>
													</Border>
												</Grid>
											</ToggleButton>

											<Popup x:Name="PART_ColorPickerPalettePopup" VerticalAlignment="Bottom" IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}" StaysOpen="False" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" VerticalOffset="1" PopupAnimation="Slide">
												<Border BorderThickness="1" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource ColorPickerDarkBorderBrush}" Padding="3">
													<Grid>
														<Grid.RowDefinitions>
															<RowDefinition Height="Auto" />
															<RowDefinition />
															<RowDefinition Height="Auto" />
														</Grid.RowDefinitions>

														<Grid x:Name="_gridStandardColorsHost" Margin="4">
															<Grid.RowDefinitions>
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
															</Grid.RowDefinitions>

															<!-- Available Colors -->
															<Grid Grid.Row="1" Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto" />
																		<RowDefinition />
																	</Grid.RowDefinitions>
																	<TextBlock Text="{TemplateBinding AvailableColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,0,0,1" />
																	<ListBox x:Name="PART_AvailableColors" Grid.Row="1" ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ColorListStyle}" />
																</Grid>
															</Grid>

															<!-- Standard Colors-->
															<Grid Grid.Row="2" Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto" />
																		<RowDefinition Height="Auto" />
																	</Grid.RowDefinitions>
																	<TextBlock Text="{TemplateBinding StandardColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,1,0,1" />
																	<ListBox x:Name="PART_StandardColors" Grid.Row="1" ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ColorListStyle}" />
																</Grid>
															</Grid>

															<!-- Recent Colors-->
															<Grid Grid.Row="3" Margin="0,1,0,1" Visibility="{TemplateBinding ShowRecentColors, Converter={StaticResource BooleanToVisibilityConverter}}">
																<Grid>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto" />
																		<RowDefinition Height="Auto" />
																	</Grid.RowDefinitions>
																	<TextBlock Text="{TemplateBinding RecentColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,1,0,1" />
																	<ListBox x:Name="PART_RecentColors" Grid.Row="1" ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ColorListStyle}" />
																</Grid>
															</Grid>
														</Grid>

														<!-- ColorCanvas -->
														<Grid x:Name="_colorCanvasHost" Visibility="Collapsed">
															<xc:ColorCanvas x:Name="PART_ColorCanvas" Background="Transparent" BorderThickness="0" UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}" SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" />
														</Grid>

														<Separator Grid.Row="1" HorizontalAlignment="Stretch" Margin="5,0,5,0" />

														<!-- More Colors Button -->
														<ToggleButton x:Name="_colorMode" Grid.Row="2" Content="Advanced" Margin="5" Visibility="{TemplateBinding ShowAdvancedButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
													</Grid>
												</Border>
											</Popup>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="DisplayColorAndName" Value="True">
												<Setter TargetName="ColorOnly" Property="Visibility" Value="Collapsed" />
												<Setter TargetName="ColorAndName" Property="Visibility" Value="Visible" />
											</Trigger>
											<Trigger SourceName="_colorMode" Property="IsChecked" Value="True">
												<Setter TargetName="_colorMode" Property="Content" Value="Standard" />
												<Setter TargetName="_colorCanvasHost" Property="Visibility" Value="Visible" />
												<Setter TargetName="_gridStandardColorsHost" Property="Visibility" Value="Collapsed" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</xc:ColorPicker.Resources>
				</xc:ColorPicker>
				<ComboBox Margin="2">
					<ComboBox.Items>

					</ComboBox.Items>
				</ComboBox>
			</StackPanel>
		</TabItem>
	</TabControl>
</UserControl>
<UserControl x:Class="DiagnosticsModule.Views.DiagnosticsView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:Controls;assembly=Controls" xmlns:extToolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended" xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit" xmlns:viewModel="clr-namespace:DiagnosticsModule.ViewModels" xmlns:Views="clr-namespace:DiagnosticsModule.Views" xmlns:xc="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
	<UserControl.Resources>
		<RadialGradientBrush x:Key="RefractionLayerBrush" GradientOrigin="0.496,1.052">
			<RadialGradientBrush.RelativeTransform>
				<TransformGroup>
					<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5" />
					<TranslateTransform X="0.02" Y="0.3" />
				</TransformGroup>
			</RadialGradientBrush.RelativeTransform>
			<GradientStop Offset="1" Color="#00000000" />
			<GradientStop Offset="0.4" Color="#FFFFFFFF" />
		</RadialGradientBrush>
		<PathGeometry x:Key="ReflectionGeometry">
			<PathFigure IsClosed="True" StartPoint="98.999,45.499">
				<BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029" />
				<BezierSegment IsSmoothJoin="True" Point1="75.860,47.685" Point2="69.111,45.196" Point3="50.167,45.196" />
				<BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363" />
				<BezierSegment IsSmoothJoin="True" Point1="7.469,52.580" Point2="1.000,53.252" Point3="1.000,44.999" />
				<BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286" />
				<BezierSegment IsSmoothJoin="True" Point1="9.106,14.370" Point2="27.875,0" Point3="50,0" />
				<BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485" />
				<BezierSegment IsSmoothJoin="True" Point1="99.139,39.369" Point2="98.999,40.084" Point3="98.999,45.499" />
			</PathFigure>
		</PathGeometry>
		<RadialGradientBrush x:Key="ReflectionBrush" GradientOrigin="0.498,0.526">
			<RadialGradientBrush.RelativeTransform>
				<TransformGroup>
					<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997" />
					<TranslateTransform X="0" Y="0.5" />
				</TransformGroup>
			</RadialGradientBrush.RelativeTransform>
			<GradientStop Offset="1" Color="#FFFFFFFF" />
			<GradientStop Offset="0.85" Color="#92FFFFFF" />
			<GradientStop Offset="0" Color="#00000000" />
		</RadialGradientBrush>
		<RadialGradientBrush x:Key="RefractionLayerPressed" GradientOrigin="0.496,1.052">
			<RadialGradientBrush.RelativeTransform>
				<TransformGroup>
					<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5" />
					<TranslateTransform X="0.02" Y="0.3" />
				</TransformGroup>
			</RadialGradientBrush.RelativeTransform>
			<GradientStop Offset="1" Color="#00000000" />
			<GradientStop Offset="0.3" Color="#FFFFFFFF" />
		</RadialGradientBrush>
		<RadialGradientBrush x:Key="ReflectionLayerPressed" GradientOrigin="0.498,0.526">
			<RadialGradientBrush.RelativeTransform>
				<TransformGroup>
					<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997" />
					<TranslateTransform X="0" Y="0.5" />
				</TransformGroup>
			</RadialGradientBrush.RelativeTransform>
			<GradientStop Offset="1" Color="#CCFFFFFF" />
			<GradientStop Offset="0.85" Color="#66FFFFFF" />
			<GradientStop Offset="0" Color="#00000000" />
		</RadialGradientBrush>
		<RadialGradientBrush x:Key="ReflectionLayerMouseOver" GradientOrigin="0.498,0.526">
			<RadialGradientBrush.RelativeTransform>
				<TransformGroup>
					<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997" />
					<TranslateTransform X="0" Y="0.5" />
				</TransformGroup>
			</RadialGradientBrush.RelativeTransform>
			<GradientStop Offset="1" Color="#FFFFFFFF" />
			<GradientStop Offset="0.85" Color="#BBFFFFFF" />
			<GradientStop Offset="0" Color="#00000000" />
		</RadialGradientBrush>
		<RadialGradientBrush x:Key="RefractionLayerMouseOver" GradientOrigin="0.496,1.052">
			<RadialGradientBrush.RelativeTransform>
				<TransformGroup>
					<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5" />
					<TranslateTransform X="0.02" Y="0.3" />
				</TransformGroup>
			</RadialGradientBrush.RelativeTransform>
			<GradientStop Offset="1" Color="#00000000" />
			<GradientStop Offset="0.45" Color="#FFFFFFFF" />
		</RadialGradientBrush>

		<Style x:Key="RibbonPopup" TargetType="{x:Type Popup}">
			<Setter Property="AllowsTransparency" Value="True" />
			<Setter Property="PopupAnimation" Value="Fade" />
			<Setter Property="Placement" Value="Relative" />
			<Setter Property="VerticalOffset" Value="25" />
			<Setter Property="HorizontalOffset" Value="-5" />
			<Setter Property="StaysOpen" Value="False" />
		</Style>
		<Style x:Key="RibbonButton" TargetType="{x:Type ToggleButton}">
			<Setter Property="Width" Value="50" />
			<Setter Property="Height" Value="50" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Grid x:Name="round">
							<Ellipse Fill="{TemplateBinding Background}" />
							<Ellipse x:Name="RefractionLayer" Fill="{StaticResource RefractionLayerBrush}" />
							<Path x:Name="ReflectionLayer" VerticalAlignment="Top" Data="{StaticResource ReflectionGeometry}" Fill="{StaticResource ReflectionBrush}" Stretch="Fill">
								<Path.RenderTransform>
									<ScaleTransform ScaleY="0.5" />
								</Path.RenderTransform>
							</Path>
							<Image Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Source="/Controls;component/Images/Logo.png" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
								<Setter TargetName="RefractionLayer" Property="Fill" Value="{StaticResource RefractionLayerMouseOver}" />
								<Setter TargetName="ReflectionLayer" Property="Fill" Value="{StaticResource ReflectionLayerMouseOver}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
								<Setter TargetName="RefractionLayer" Property="Fill" Value="{StaticResource RefractionLayerPressed}" />
								<Setter TargetName="ReflectionLayer" Property="Fill" Value="{StaticResource ReflectionLayerPressed}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="Ribbon" TargetType="{x:Type ContentControl}">
			<Setter Property="Width" Value="50" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ContentControl}">
						<Grid>
							<ToggleButton x:Name="button" Content="{TemplateBinding Content}" Style="{StaticResource RibbonButton}" />
							<Popup x:Name="popup" DataContext="{TemplateBinding DataContext}" IsOpen="{Binding IsChecked, ElementName=button}" PlacementTarget="{Binding ElementName=button}" Style="{StaticResource RibbonPopup}">
								<Grid>
									<!--<Path Fill="{DynamicResource BaseWindowBackgroundBrush}" Stroke="{DynamicResource WindowBorderBrush}" StrokeThickness="1">
										<Path.Data>
											<CombinedGeometry GeometryCombineMode="Exclude">
												<CombinedGeometry.Geometry1>
													<RectangleGeometry RadiusX="5" RadiusY="5" Rect="0,0,200,400" />
												</CombinedGeometry.Geometry1>
												<CombinedGeometry.Geometry2>
													<EllipseGeometry Center="30,0" RadiusX="25" RadiusY="25" />
												</CombinedGeometry.Geometry2>
											</CombinedGeometry>
										</Path.Data>
									</Path>-->
									<Border Background="{DynamicResource BaseWindowBackgroundBrush}" BorderBrush="{DynamicResource WindowBorderBrush}" CornerRadius="5" BorderThickness="1">
										<Border Background="{DynamicResource AlternativeBackgroundBrush}" Margin="5,30,5,5">
											<ContentPresenter />
										</Border>
									</Border>
									<ToggleButton IsChecked="{Binding IsChecked, ElementName=button}" Style="{x:Null}">
										<ToggleButton.Template>
											<ControlTemplate TargetType="ToggleButton">
												<ContentPresenter />
											</ControlTemplate>
										</ToggleButton.Template>
										<Ellipse Width="{Binding Width, ElementName=button}" Height="{Binding Height, ElementName=button}" Margin="5,-25" HorizontalAlignment="Left" VerticalAlignment="Top">
											<Ellipse.Fill>
												<VisualBrush x:Name="roundBrush" Visual="{Binding ElementName=button}" />
											</Ellipse.Fill>
										</Ellipse>
									</ToggleButton>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger SourceName="popup" Property="IsOpen" Value="True">
								<Setter TargetName="button" Property="IsHitTestVisible" Value="False" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	<TabControl>
		<TabItem Header="Отладка">
			<Border Margin="2" Background="White" BorderThickness="0" CornerRadius="10">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<StackPanel Grid.Row="0" Margin="10">
						<ContentControl Style="{StaticResource Ribbon}">
							<ContentControl.Content>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Row="1" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Выравнивать" />
									<Label Grid.Row="2" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет текста" />
									<Label Grid.Row="3" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет фона" />
									<Label Grid.Row="4" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет границы" />
									<Label Grid.Row="5" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Ширина границы" />
									<Label Grid.Row="6" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Размер шрифта" />
									<Label Grid.Row="7" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Шрифт" />
									<Label Grid.Row="8" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Жирный" />
									<Label Grid.Row="9" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Курсив" />
									<Label Grid.Row="10" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Растянуть" />
									<ComboBox Grid.Row="1" Grid.Column="1" Margin="2" />
									<ComboBox Grid.Row="2" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<ComboBox Grid.Row="3" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<ComboBox Grid.Row="4" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<extToolkit:IntegerUpDown Grid.Row="5" Grid.Column="1" Margin="2" Minimum="0" />
									<extToolkit:IntegerUpDown Grid.Row="6" Grid.Column="1" Margin="2" Minimum="5" />
									<ComboBox Grid.Row="7" Grid.Column="1" Margin="2">
										<ComboBox.ItemTemplate>
											<DataTemplate>
												<TextBlock />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
									<CheckBox Grid.Row="8" Grid.Column="1" VerticalAlignment="Center" />
									<CheckBox Grid.Row="9" Grid.Column="1" VerticalAlignment="Center" />
									<CheckBox Grid.Row="10" Grid.Column="1" VerticalAlignment="Center" />
								</Grid>
							</ContentControl.Content>
						</ContentControl>
						<Button Width="300" Margin="2" Command="{Binding ShowDriversCommand}" Content="Драйверы" />
						<Button Width="300" Margin="2" Command="{Binding ShowXDriversCommand}" Content="Драйверы ГК" />
						<Button Width="300" Margin="2" Command="{Binding ShowTreeCommand}" Content="Дерево" />
						<Button Width="300" Margin="2" Command="{Binding TreeListViewTestCommand}" Content="TreeListView Test" />
						<Button Width="300" Margin="2" Command="{Binding Test1Command}" Content="Test1" />
						<Button Width="300" Margin="2" Command="{Binding Test2Command}" Content="Test2" />
						<Button Width="300" Margin="2" Command="{Binding Test3Command}" Content="Test3" />
						<Button Width="300" Margin="2" Command="{Binding Test6Command}" Content="Test6" />
						<Button Width="300" Margin="2" Command="{Binding Test7Command}" Content="Test7" />
						<Button Width="300" Margin="2" Command="{Binding Test8Command}" Content="Test8" />
						<Button Width="300" Margin="2" Command="{Binding Test9Command}" Content="Test9" />
						<Button Width="300" Margin="2" Command="{Binding BalloonTestCommand}" Content="Предупреждение из трея" />
						<Button Width="300" Margin="2" Command="{Binding PlanDuplicateTestCommand}" Content="Удвоение планов" />
						<Button Width="300" Margin="2" Command="{Binding MailCommand}" Content="Почта" />
						<Button Width="300" Margin="2" Command="{Binding Test11Command}" Content="Зоны" />
						<Button Width="300" Margin="2" Command="{Binding Test10Command}" Content="Др" />
						<Button Width="300" Margin="2" Command="{Binding IntegrateCommand}" Content="IntegrateCommand" />
						<Button Width="300" Margin="2" Command="{Binding DesintegrateCommand}" Content="DesintegrateCommand" />
						<controls:PopupButton Width="300" Margin="2" Content="Test Popup">
							<controls:PopupButton.PopupContent>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Row="1" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Выравнивать" />
									<Label Grid.Row="2" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет текста" />
									<Label Grid.Row="3" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет фона" />
									<Label Grid.Row="4" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Цвет границы" />
									<Label Grid.Row="5" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Ширина границы" />
									<Label Grid.Row="6" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Размер шрифта" />
									<Label Grid.Row="7" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Шрифт" />
									<Label Grid.Row="8" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Жирный" />
									<Label Grid.Row="9" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Курсив" />
									<Label Grid.Row="10" Grid.Column="0" Margin="2" HorizontalAlignment="Right" Content="Растянуть" />
									<ComboBox Grid.Row="1" Grid.Column="1" Margin="2" />
									<ComboBox Grid.Row="2" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<ComboBox Grid.Row="3" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<ComboBox Grid.Row="4" Grid.Column="1" Margin="2" Style="{StaticResource ColorPickerComboBox}" />
									<extToolkit:IntegerUpDown Grid.Row="5" Grid.Column="1" Margin="2" Minimum="0" />
									<extToolkit:IntegerUpDown Grid.Row="6" Grid.Column="1" Margin="2" Minimum="5" />
									<ComboBox Grid.Row="7" Grid.Column="1" Margin="2">
										<ComboBox.ItemTemplate>
											<DataTemplate>
												<TextBlock />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
									<CheckBox Grid.Row="8" Grid.Column="1" VerticalAlignment="Center" />
									<CheckBox Grid.Row="9" Grid.Column="1" VerticalAlignment="Center" />
									<CheckBox Grid.Row="10" Grid.Column="1" VerticalAlignment="Center" />
								</Grid>
							</controls:PopupButton.PopupContent>
						</controls:PopupButton>
					</StackPanel>
					<ScrollViewer Grid.Row="1">
						<TextBox Text="{Binding Text}" />
					</ScrollViewer>
				</Grid>
			</Border>
		</TabItem>
		<TabItem Header="FS">
			<Button Width="300" Margin="2" Command="{Binding Test5Command}" Content="WCF Test" />
		</TabItem>
		<TabItem Header="Test Controls">
			<StackPanel Width="200" Margin="2" HorizontalAlignment="Left">
				<toolkit:AutoCompleteBox IsTextCompletionEnabled="True" ItemsSource="{Binding AutoCompleteItems}" Text="{Binding AutoText}" />
				<extToolkit:ColorCanvas SelectedColor="{Binding SelectedColor, ElementName=picker, Mode=TwoWay}" />
				<extToolkit:ColorPicker x:Name="picker" DisplayColorAndName="True" ShowRecentColors="True" />
				<extToolkit:Magnifier />
				<Button Margin="2" Click="Button_Click" Content="Click" />
				<xc:ColorPicker x:Name="picker2" Margin="2" DisplayColorAndName="True" ShowRecentColors="True" />
				<xc:ColorPicker Margin="2" DisplayColorAndName="True" />
				<ComboBox Margin="2" Style="{StaticResource ColorPickerComboBox}" />
				<ComboBox Margin="2" />
				<TextBlock Text="XXX YYY ZZZ" />
			</StackPanel>
		</TabItem>
	</TabControl>
</UserControl>
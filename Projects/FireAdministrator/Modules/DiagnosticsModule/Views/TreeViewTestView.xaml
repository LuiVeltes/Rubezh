<UserControl x:Class="DiagnosticsModule.Views.TreeViewTestView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:Controls;assembly=Controls" xmlns:tree="clr-namespace:Controls.TreeList;assembly=Controls" MinWidth="400" MinHeight="400">

	<UserControl.Resources>
		<!--
			<Style TargetType="{x:Type tree:TreeList}" BasedOn="{StaticResource {x:Type ListView}}" />
			<Style TargetType="{x:Type tree:TreeListItem}">
			<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
			</Style>
			<Style x:Key="TreeListItemNodeStyle" TargetType="{x:Type tree:TreeListItem}">
			<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="Template">
			<Setter.Value>
			<ControlTemplate>
			<ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
			<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsEnabled" Value="False">
			<Setter Property="TextElement.Foreground">
			<Setter.Value>
			<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
			</Setter.Value>
			</Setter>
			</Trigger>
			</ControlTemplate.Triggers>
			</ControlTemplate>
			</Setter.Value>
			</Setter>
			</Style>
		-->
		<!--<Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="{x:Type tree:TreeList}" />
		<Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type tree:TreeListItem}">
			<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
		</Style>-->

		<ContextMenu x:Key="DeviceContextMenu">
			<MenuItem Command="{Binding CopyCommand}" Header="Копировать" />
			<MenuItem Command="{Binding CutCommand}" Header="Вырезать" />
			<MenuItem Command="{Binding PasteCommand}" Header="Вставить" />
			<MenuItem Command="{Binding PasteAsCommand}" Header="Вставить как" />
			<Separator />
			<MenuItem Command="{Binding AddCommand}" Header="Добавить" />
			<MenuItem Command="{Binding AddManyCommand}" Header="Добавить несколько" />
			<MenuItem Command="{Binding RemoveCommand}" Header="Удалить" />
			<MenuItem Command="{Binding ShowZoneLogicCommand}" Header="Настройка логики" Visibility="{Binding Driver.IsZoneLogicDevice, Converter={StaticResource BoolToVisibilityConverter}}" />
			<MenuItem Command="{Binding ShowPropertiesCommand}" Header="Свойства" />
		</ContextMenu>
	</UserControl.Resources>

	<Grid>
		<tree:TreeList Name="_tree">
			<tree:TreeList.View>
				<GridView>
					<GridView.Columns>
						<GridViewColumn Width="250" Header="Устройство">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<Controls:EditorPresenter>
										<Controls:EditorPresenter.ViewTemplate>
											<ControlTemplate>
												<StackPanel Background="Transparent" ContextMenu="{StaticResource DeviceContextMenu}" Orientation="Horizontal">
													<tree:RowExpander />
													<CheckBox IsChecked="{Binding IsUsed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Device.CanBeNotUsed, Converter={StaticResource BoolToVisibilityConverter}}" />
													<Image Width="16" Height="16" Margin="5, 0, 5, 0" Source="{Binding Driver.ImageSource}" />
													<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Driver.ShortName}" />
												</StackPanel>
											</ControlTemplate>
										</Controls:EditorPresenter.ViewTemplate>
										<Controls:EditorPresenter.EditTemplate>
											<ControlTemplate>
												<DockPanel ContextMenu="{StaticResource DeviceContextMenu}">
													<StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
														<tree:RowExpander />
														<CheckBox IsChecked="{Binding IsUsed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Device.CanBeNotUsed, Converter={StaticResource BoolToVisibilityConverter}}" />
														<Image Width="16" Height="16" Margin="5, 0, 5, 0" Source="{Binding Driver.ImageSource}" />
														<TextBlock VerticalAlignment="Center" Text="{Binding Driver.ShortName}" Visibility="{Binding CanChangeDriver, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" />
													</StackPanel>
													<ComboBox ItemsSource="{Binding AvailvableDrivers}" SelectedItem="{Binding Driver, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding CanChangeDriver, Converter={StaticResource BoolToVisibilityConverter}}">
														<ComboBox.ItemTemplate>
															<DataTemplate>
																<TextBlock Foreground="Black" Text="{Binding ShortName}" />
															</DataTemplate>
														</ComboBox.ItemTemplate>
													</ComboBox>
												</DockPanel>
											</ControlTemplate>
										</Controls:EditorPresenter.EditTemplate>
									</Controls:EditorPresenter>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Width="100" Header="Адрес">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<Controls:EditorPresenter>
										<Controls:EditorPresenter.ViewTemplate>
											<ControlTemplate>
												<TextBlock Text="{Binding Address}" Visibility="{Binding Driver.HasAddress, Converter={StaticResource BoolToVisibilityConverter}}" />
											</ControlTemplate>
										</Controls:EditorPresenter.ViewTemplate>
										<Controls:EditorPresenter.EditTemplate>
											<ControlTemplate>
												<Grid>
													<TextBlock Text="{Binding Address}" Visibility="{Binding Device.CanEditAddress, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" />
												</Grid>
											</ControlTemplate>
										</Controls:EditorPresenter.EditTemplate>
									</Controls:EditorPresenter>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Width="100" Header="Зона">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<StackPanel Orientation="Horizontal">
										<Image Width="14" Height="14" Margin="0, 0 ,5, 0" Source="/Controls;component/Images/Link.png" Visibility="{Binding HasExternalDevices, Converter={StaticResource BoolToVisibilityConverter}}" />
										<TextBlock MinWidth="100" Cursor="Hand" Text="{Binding EditingPresentationZone}" ToolTip="{Binding EditingPresentationZone}" Visibility="{Binding IsZoneOrLogic, Converter={StaticResource BoolToVisibilityConverter}}">
											<TextBlock.InputBindings>
												<MouseBinding Command="{Binding ShowZoneOrLogicCommand}" MouseAction="LeftClick" />
											</TextBlock.InputBindings>
										</TextBlock>
									</StackPanel>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="Примечание">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<Controls:EditorPresenter>
										<Controls:EditorPresenter.ViewTemplate>
											<ControlTemplate>
												<TextBlock Text="{Binding Description}" />
											</ControlTemplate>
										</Controls:EditorPresenter.ViewTemplate>
										<Controls:EditorPresenter.EditTemplate>
											<ControlTemplate>
												<TextBox Name="descriptionTextBox" HorizontalAlignment="Stretch" BorderThickness="0" Foreground="Black" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" />
												<ControlTemplate.Triggers>
													<Trigger SourceName="descriptionTextBox" Property="IsVisible" Value="True">
														<Setter TargetName="descriptionTextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=descriptionTextBox}" />
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Controls:EditorPresenter.EditTemplate>
									</Controls:EditorPresenter>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Width="50" DisplayMemberBinding="{Binding Device.IntAddress}" Header="Address" />
					</GridView.Columns>
				</GridView>
			</tree:TreeList.View>
		</tree:TreeList>
	</Grid>
</UserControl>
//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace SettingsModule
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class SampleDatabaseEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект SampleDatabaseEntities, используя строку соединения из раздела "SampleDatabaseEntities" файла конфигурации приложения.
        /// </summary>
        public SampleDatabaseEntities() : base("name=SampleDatabaseEntities", "SampleDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта SampleDatabaseEntities.
        /// </summary>
        public SampleDatabaseEntities(string connectionString) : base(connectionString, "SampleDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта SampleDatabaseEntities.
        /// </summary>
        public SampleDatabaseEntities(EntityConnection connection) : base(connection, "SampleDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Gk_event> Gk_events
        {
            get
            {
                if ((_Gk_events == null))
                {
                    _Gk_events = base.CreateObjectSet<Gk_event>("Gk_events");
                }
                return _Gk_events;
            }
        }
        private ObjectSet<Gk_event> _Gk_events;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Gk_events. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGk_events(Gk_event gk_event)
        {
            base.AddObject("Gk_events", gk_event);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SampleDatabaseModel", Name="Gk_event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gk_event : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Gk_event.
        /// </summary>
        /// <param name="key">Исходное значение свойства key.</param>
        /// <param name="device">Исходное значение свойства device.</param>
        /// <param name="date">Исходное значение свойства date.</param>
        public static Gk_event CreateGk_event(global::System.Int32 key, global::System.String device, global::System.DateTime date)
        {
            Gk_event gk_event = new Gk_event();
            gk_event.key = key;
            gk_event.device = device;
            gk_event.date = date;
            return gk_event;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 key
        {
            get
            {
                return _key;
            }
            set
            {
                if (_key != value)
                {
                    OnkeyChanging(value);
                    ReportPropertyChanging("key");
                    _key = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("key");
                    OnkeyChanged();
                }
            }
        }
        private global::System.Int32 _key;
        partial void OnkeyChanging(global::System.Int32 value);
        partial void OnkeyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String device
        {
            get
            {
                return _device;
            }
            set
            {
                OndeviceChanging(value);
                ReportPropertyChanging("device");
                _device = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("device");
                OndeviceChanged();
            }
        }
        private global::System.String _device;
        partial void OndeviceChanging(global::System.String value);
        partial void OndeviceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();

        #endregion
    
    }

    #endregion
    
}

<UserControl x:Class="GKModule.Views.DevicesView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:Controls;assembly=Controls" xmlns:Conv="clr-namespace:Controls.Converters;assembly=Controls" xmlns:Converters="clr-namespace:GKModule.Converters" xmlns:drag="clr-namespace:Infrastructure.Common.Services.DragDrop;assembly=Infrastructure.Common" xmlns:tree="clr-namespace:Controls.TreeList;assembly=Controls" xmlns:Views="clr-namespace:GKModule.Views" xmlns:viewModel="clr-namespace:GKModule.ViewModels">

	<UserControl.Resources>
		<Conv:SwitchConverter x:Key="Tooltip">
			<Conv:SwitchCase Then="Для размещения устройства на плане зажмите левую кнопку мыши и не отпуская ее ведите на план, затем, отпустите ее в месте, где нужно разместить устройство" When="Multiple" />
			<Conv:SwitchCase Then="Для размещения устройства на плане зажмите левую кнопку мыши и не отпуская ее ведите на план, затем, отпустите ее в месте, где нужно разместить устройство" When="NotPresent" />
			<Conv:SwitchCase Then="Устройство нельзя размещать на плане" When="Prohibit" />
			<Conv:SwitchCase Then="Устройство уже размещено на плане" When="Single" />
		</Conv:SwitchConverter>
		<ContextMenu x:Key="DeviceContextMenu">
			<MenuItem Command="{Binding CopyCommand}" Header="Копировать (Ctrl+C)" />
			<MenuItem Command="{Binding CutCommand}" Header="Вырезать (Ctrl+X)" />
			<MenuItem Command="{Binding PasteCommand}" Header="Вставить (Ctrl+V)" />
			<Separator />
			<MenuItem Command="{Binding AddCommand}" Header="Добавить дочернее устройство (Ctrl+N)" />
			<MenuItem Command="{Binding AddToParentCommand}" Header="Добавить к родительскому устройству (Ctrl+M)" />
			<MenuItem Command="{Binding RemoveCommand}" Header="Удалить (Ctrl+Del)" />
			<MenuItem Command="{Binding ShowLogicCommand}" Header="Настройка логики исполнительного устройства по состоянию зон" />
			<MenuItem Command="{Binding ShowPropertiesCommand}" Header="Свойства" />
			<Separator Visibility="{Binding Driver.IsPlaceable, Converter={StaticResource BoolToVisibilityConverter}}" />
			<MenuItem Command="{Binding AllowMultipleVizualizationCommand}" CommandParameter="{StaticResource True}" Header="Разрешить множественную визуализацию" Visibility="{Binding Driver.IsPlaceable, Converter={StaticResource BoolToVisibilityConverter}}" />
			<MenuItem Command="{Binding AllowMultipleVizualizationCommand}" CommandParameter="{StaticResource False}" Header="Запретить множественную визуализацию" Visibility="{Binding Driver.IsPlaceable, Converter={StaticResource BoolToVisibilityConverter}}" />
		</ContextMenu>
		<Converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
		<viewModel:DeviceViewModelDeviceComparer x:Key="DeviceViewModelDeviceComparer" />
		<viewModel:DeviceViewModelAddressComparer x:Key="DeviceViewModelAddressComparer" />
		<viewModel:DeviceViewModelZoneComparer x:Key="DeviceViewModelZoneComparer" />
		<viewModel:DeviceViewModelDescriptionComparer x:Key="DeviceViewModelDescriptionComparer" />
	</UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
            <RowDefinition Height="*" MinHeight="200" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="150" MinHeight="150" />
        </Grid.RowDefinitions>
		<tree:TreeList Grid.Row="0" Focusable="True" SelectedTreeNode="{Binding SelectedDevice}" Source="{Binding RootDevices}" tree:SortBehavior.CanUserSortColumns="False">
			<tree:TreeList.Resources>
				<Style x:Key="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
					<Setter Property="MinWidth" Value="0" />
					<Setter Property="MinHeight" Value="0" />
				</Style>
				<Style x:Key="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
					<Setter Property="MinWidth" Value="0" />
					<Setter Property="MinHeight" Value="0" />
				</Style>
			</tree:TreeList.Resources>
			<tree:TreeList.View>
				<GridView>
					<GridViewColumn Width="250" Header="Устройство" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelDeviceComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<DockPanel ContextMenu="{StaticResource DeviceContextMenu}">
									<drag:DragDropDecorator AllowSimulateDrag="True" DragCommand="{Binding CreateDragObjectCommand}" DragVisualProvider="{Binding CreateDragVisual}" DynamicCursor="True" IsSource="True">
										<Image Source="{Binding VisualizationState, Converter={StaticResource VisualizationStateToImageSourceConverter}}" ToolTip="{Binding VisualizationState, Converter={StaticResource Tooltip}}" />
									</drag:DragDropDecorator>
									<Controls:EditorPresenter>
										<Controls:EditorPresenter.ViewTemplate>
											<ControlTemplate>
												<Grid>
													<Image Width="16" Height="16" Margin="5, 0, 5, 0" HorizontalAlignment="Left" Source="{Binding Driver.ImageSource}" />
													<TextBlock Width="200" Margin="31 0 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Device.ShortName}">
														<!--<TextBlock.Style>
															<Style>
																<Style.Triggers>
																	<DataTrigger Binding="{Binding Device.Driver.IsPlaceable}" Value="True">
																		<DataTrigger.Setters>
																			<Setter Property="TextBlock.FontWeight" Value="Bold" />
																		</DataTrigger.Setters>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</TextBlock.Style>-->
													</TextBlock>
												</Grid>
											</ControlTemplate>
										</Controls:EditorPresenter.ViewTemplate>
										<Controls:EditorPresenter.EditTemplate>
											<ControlTemplate>
                                                <Grid>
                                                    <ComboBox ItemsSource="{Binding AvailvableDrivers}" SelectedItem="{Binding Driver, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding CanChangeDriver, Converter={StaticResource BoolToVisibilityConverter}}">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid>
                                                                    <Image Width="16" Height="16" Margin="5, 0, 5, 0" HorizontalAlignment="Left" VerticalAlignment="Center" Source="{Binding ImageSource}" />
                                                                    <TextBlock Margin="31 0 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Foreground="Black" Text="{Binding ShortName}" />
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                    <Image Width="16" Height="16" Margin="5, 0, 5, 0" HorizontalAlignment="Left" Source="{Binding Driver.ImageSource}"
                                                        Visibility="{Binding CanChangeDriver, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" />
                                                    <TextBlock Margin="31 0 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Device.ShortName}"
                                                        Visibility="{Binding CanChangeDriver, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" />
                                                </Grid>
											</ControlTemplate>
										</Controls:EditorPresenter.EditTemplate>
									</Controls:EditorPresenter>
								</DockPanel>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Width="100" Header="Адрес" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelAddressComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock Text="{Binding PresentationAddress}" />
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
									<Controls:EditorPresenter.EditTemplate>
										<ControlTemplate>
											<Grid>
												<Views:AddressEditor Address="{Binding Address}" Device="{Binding Device}" Visibility="{Binding Device.CanEditAddress, Converter={StaticResource BoolToVisibilityConverter}}" />
												<TextBlock Text="{Binding Address}" Visibility="{Binding Device.CanEditAddress, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" />
											</Grid>
										</ControlTemplate>
									</Controls:EditorPresenter.EditTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Width="300" Header="Зона или Логика" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelZoneComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock MinWidth="100" Cursor="Hand" Text="{Binding EditingPresentationZone}" Visibility="{Binding IsZoneOrLogic, Converter={StaticResource BoolToVisibilityConverter}}">
                                                <TextBlock.Style>
											        <Style TargetType="TextBlock">
												        <Style.Triggers>
													        <DataTrigger Binding="{Binding IsZoneGrayed}" Value="True">
														        <Setter Property="TextBlock.Foreground" Value="Gray" />
													        </DataTrigger>
												        </Style.Triggers>
											        </Style>
										        </TextBlock.Style>
												<TextBlock.InputBindings>
													<MouseBinding Command="{Binding ShowZoneOrLogicCommand}" MouseAction="LeftClick" />
												</TextBlock.InputBindings>
												<TextBlock.ToolTip>
													<WrapPanel>
														<TextBlock Text="{Binding EditingPresentationZone}" TextWrapping="Wrap" />
													</WrapPanel>
												</TextBlock.ToolTip>
											</TextBlock>
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Width="100" Header="Примечание" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelDescriptionComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock Text="{Binding Description}" />
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
									<Controls:EditorPresenter.EditTemplate>
										<ControlTemplate>
											<TextBox Name="descriptionTextBox" HorizontalAlignment="Stretch" BorderThickness="0" Foreground="Black" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" />
											<ControlTemplate.Triggers>
												<Trigger SourceName="descriptionTextBox" Property="IsVisible" Value="True">
													<Setter TargetName="descriptionTextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=descriptionTextBox}" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Controls:EditorPresenter.EditTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
				</GridView>
			</tree:TreeList.View>
		</tree:TreeList>
		<GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Cursor="SizeNS" />
		<Border Grid.Row="2" Margin="0, 5, 0, 0" Background="{DynamicResource BackgroundBrush}" CornerRadius="5,0,0,5" DataContext="{Binding SelectedDevice}">
			<ScrollViewer VerticalScrollBarVisibility="Auto">
				<StackPanel Margin="5" HorizontalAlignment="Left">
					<StackPanel Orientation="Horizontal">
						<Image Width="16" Margin="2 2 5 2" Source="{Binding Driver.ImageSource}" />
						<TextBlock VerticalAlignment="Center" FontWeight="Bold" Foreground="White" Text="{Binding Driver.Name}" />
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock Margin="2 2 5 2" Foreground="White" Text="Подключено к " />
						<TextBlock VerticalAlignment="Center" FontWeight="Bold" Foreground="White">
							<Hyperlink Command="{Binding ShowParentCommand}" Style="{StaticResource HyperlinkStyle}">
								<TextBlock Margin="2" Text="{Binding Device.Parent.Driver.ShortName}" />
							</Hyperlink>
						</TextBlock>
						<StackPanel.Style>
							<Style>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Device.Parent}" Value="{x:Null}">
										<Setter Property="StackPanel.Visibility" Value="Collapsed" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
					</StackPanel>
					<WrapPanel Orientation="Horizontal" Visibility="{Binding IsZoneOrLogic, Converter={StaticResource BoolToVisibilityConverter}}">
						<Label Content="Зона или Логика: " />
						<Label Content="Зона или Логика не указана" IsEnabled="False">
							<Label.Style>
								<Style>
									<Setter Property="Label.Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding PresentationZone}" Value="">
											<Setter Property="Label.Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>
						<TextBlock VerticalAlignment="Center">
							<Hyperlink Command="{Binding ShowZoneCommand}" Style="{StaticResource HyperlinkStyle}">
								<TextBlock Margin="2" Text="{Binding PresentationZone}" TextWrapping="Wrap" />
							</Hyperlink>
							<TextBlock.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding PresentationZone}" Value="">
											<Setter Property="TextBlock.Visibility" Value="Collapsed" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>
					</WrapPanel>
					<Views:PropertiesView DataContext="{Binding PropertiesViewModel}" />
					<StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Visibility="{Binding HasAUProperties, Converter={StaticResource BoolToVisibilityConverter}}">
						<Controls:ToolBarButton Width="36" Height="36" Margin="0,0,0,-8" Command="{Binding GetAUPropertiesCommand}" ImageSource="/Controls;component/Images/readconfig.png" ToolTip="Считать параметры устройства" />
						<Controls:ToolBarButton Width="36" Height="36" Margin="0,0,0,-8" Command="{Binding SetAUPropertiesCommand}" ImageSource="/Controls;component/Images/writeconfig.png" ToolTip="Записать параметры в устройство" />
						<Controls:ToolBarButton Width="36" Height="36" Command="{Binding ResetAUPropertiesCommand}" ImageSource="/Controls;component/Images/defconfig.png" ToolTip="Параметры по умолчанию" />
					</StackPanel>
				</StackPanel>
			</ScrollViewer>
		</Border>
	</Grid>
</UserControl>
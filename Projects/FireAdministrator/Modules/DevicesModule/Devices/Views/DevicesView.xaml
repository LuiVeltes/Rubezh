<UserControl x:Class="DevicesModule.Views.DevicesView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:Controls;assembly=Controls" xmlns:Conv="clr-namespace:Controls.Converters;assembly=Controls" xmlns:Converters="clr-namespace:DevicesModule.Converters" xmlns:drag="clr-namespace:Infrastructure.Common.Services.DragDrop;assembly=Infrastructure.Common" xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit" xmlns:Views="clr-namespace:DevicesModule.Views" Focusable="True">

	<UserControl.Resources>
		<ContextMenu x:Key="DeviceContextMenu">
			<MenuItem Command="{Binding CopyCommand}" Header="Копировать (Ctrl+C)" />
			<MenuItem Command="{Binding CutCommand}" Header="Вырезать (Ctrl+X)" />
			<MenuItem Command="{Binding PasteCommand}" Header="Вставить (Ctrl+V)" />
			<MenuItem Command="{Binding PasteAsCommand}" Header="Вставить как" />
			<Separator />
			<MenuItem Command="{Binding AddCommand}" Header="Добавить дочернее устройство (Ctrl+N)" />
			<MenuItem Command="{Binding AddToParentCommand}" Header="Добавить к родительскому устройству (Ctrl+M)" />
			<MenuItem Command="{Binding RemoveCommand}" Header="Удалить (Ctrl+Del)" />
			<MenuItem Command="{Binding ShowZoneLogicCommand}" Header="Настройка логики исполнительного устройства по состоянию зон" />
			<MenuItem Command="{Binding ShowPropertiesCommand}" Header="Свойства" />
			<Separator />
			<MenuItem Command="{Binding AllowMultipleVizualizationCommand}" CommandParameter="{StaticResource True}" Header="Разрешить множественную визуализацию" />
			<MenuItem Command="{Binding AllowMultipleVizualizationCommand}" CommandParameter="{StaticResource False}" Header="Запретить множественную визуализацию" />
		</ContextMenu>
		<Converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
		<Conv:SwitchConverter x:Key="Tooltip">
			<Conv:SwitchCase Then="Для размещения устройства на плане зажмите левую кнопку мыши и не отпуская ее ведите на план, затем, отпустите ее в месте, где нужно разместить устройство" When="Multiple" />
			<Conv:SwitchCase Then="Для размещения устройства на плане зажмите левую кнопку мыши и не отпуская ее ведите на план, затем, отпустите ее в месте, где нужно разместить устройство" When="NotPresent" />
			<Conv:SwitchCase Then="Устройство нельзя размещать на плане" When="Prohibit" />
			<Conv:SwitchCase Then="Устройство уже размещено на плане" When="Single" />
		</Conv:SwitchConverter>
	</UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" MinHeight="200" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="150" MinHeight="150" />
        </Grid.RowDefinitions>
        <Controls:TreeListView Name="DevicesTreeListView" Grid.Row="0" Focusable="True" ItemsSource="{Binding RootDevices}" SelectedObject="{Binding SelectedDevice}" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling">
            <Controls:TreeListView.Resources>
                <Style x:Key="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="MinHeight" Value="0" />
                </Style>
                <Style x:Key="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="MinHeight" Value="0" />
                </Style>
            </Controls:TreeListView.Resources>
            <Controls:TreeListView.Columns>
                <GridViewColumn Width="250" Header="Устройство">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel ContextMenu="{StaticResource DeviceContextMenu}" Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding IsUsed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Device.CanBeNotUsed, Converter={StaticResource BoolToVisibilityConverter}}" />
                                <drag:DragDropDecorator DragCommand="{Binding CreateDragObjectCommand}" DragVisualProvider="{Binding CreateDragVisual}" DynamicCursor="True" IsSource="True">
                                    <drag:DragDropDecorator.InputBindings>
                                        <MouseBinding Command="{Binding ShowOnPlanCommand}" MouseAction="LeftClick" />
                                        <MouseBinding Command="{Binding BeginDragCommand}" MouseAction="LeftDoubleClick" />
                                    </drag:DragDropDecorator.InputBindings>
                                    <Image Source="{Binding VisualizationState, Converter={StaticResource VisualizationStateToImageSourceConverter}}" ToolTip="{Binding VisualizationState, Converter={StaticResource Tooltip}}" />
                                </drag:DragDropDecorator>
                                <Image Width="16" Height="16" Margin="5, 0, 5, 0" Source="{Binding Driver.ImageSource}" />
                                <Controls:EditorPresenter>
                                    <Controls:EditorPresenter.ViewTemplate>
                                        <ControlTemplate>
                                            <TextBlock Width="200" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Driver.ShortName}">
												<TextBlock.Style>
													<Style>
														<Style.Triggers>
															<DataTrigger Binding="{Binding Device.Driver.IsPlaceable}" Value="True">
																<DataTrigger.Setters>
																	<Setter Property="TextBlock.FontWeight" Value="Bold" />
																</DataTrigger.Setters>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</TextBlock.Style>
                                            </TextBlock>
                                        </ControlTemplate>
                                    </Controls:EditorPresenter.ViewTemplate>
                                    <Controls:EditorPresenter.EditTemplate>
                                        <ControlTemplate>
                                            <ComboBox ItemsSource="{Binding AvailvableDrivers}" SelectedItem="{Binding Driver, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding CanChangeDriver, Converter={StaticResource BoolToVisibilityConverter}}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Image Width="16" Height="16" Margin="5, 0, 5, 0" HorizontalAlignment="Left" Source="{Binding ImageSource}" />
                                                            <TextBlock Margin="31 0 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Foreground="Black" Text="{Binding ShortName}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </ControlTemplate>
                                    </Controls:EditorPresenter.EditTemplate>
                                </Controls:EditorPresenter>
                            </StackPanel>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="100" Header="Адрес">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Controls:EditorPresenter>
                                <Controls:EditorPresenter.ViewTemplate>
                                    <ControlTemplate>
                                        <TextBlock Text="{Binding Address}" Visibility="{Binding Driver.HasAddress, Converter={StaticResource BoolToVisibilityConverter}}" />
                                    </ControlTemplate>
                                </Controls:EditorPresenter.ViewTemplate>
                                <Controls:EditorPresenter.EditTemplate>
                                    <ControlTemplate>
                                        <Grid>
                                            <Views:AddressEditor Address="{Binding Address}" Device="{Binding Device}" Visibility="{Binding Device.CanEditAddress, Converter={StaticResource BoolToVisibilityConverter}}" />
                                            <TextBlock Text="{Binding Address}" Visibility="{Binding Device.CanEditAddress, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" />
                                        </Grid>
                                    </ControlTemplate>
                                </Controls:EditorPresenter.EditTemplate>
                            </Controls:EditorPresenter>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="200" Header="Зона">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Width="14" Height="14" Margin="0, 0 ,5, 0" Source="/Controls;component/Images/Link.png" Visibility="{Binding HasExternalDevices, Converter={StaticResource BoolToVisibilityConverter}}" />
                                <TextBlock MinWidth="100" Cursor="Hand" Text="{Binding EditingPresentationZone}" ToolTip="{Binding EditingPresentationZone}" Visibility="{Binding IsZoneOrLogic, Converter={StaticResource BoolToVisibilityConverter}}">
									<TextBlock.InputBindings>
										<MouseBinding Command="{Binding ShowZoneOrLogicCommand}" MouseAction="LeftClick" />
									</TextBlock.InputBindings>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Header="Примечание">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Controls:EditorPresenter>
                                <Controls:EditorPresenter.ViewTemplate>
                                    <ControlTemplate>
                                        <TextBlock Text="{Binding Description}" />
                                    </ControlTemplate>
                                </Controls:EditorPresenter.ViewTemplate>
                                <Controls:EditorPresenter.EditTemplate>
                                    <ControlTemplate>
                                        <toolkit:AutoCompleteBox Name="descriptionTextBox" IsTextCompletionEnabled="True" Populating="Description_Populating" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                        <ControlTemplate.Triggers>
                                            <Trigger SourceName="descriptionTextBox" Property="IsVisible" Value="True">
                                                <Setter TargetName="descriptionTextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=descriptionTextBox}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Controls:EditorPresenter.EditTemplate>
                            </Controls:EditorPresenter>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </Controls:TreeListView.Columns>
        </Controls:TreeListView>
        <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Cursor="SizeNS" />

        <Border Grid.Row="2" Background="{DynamicResource BackgroundBrush}" CornerRadius="5">
            <Grid Margin="5" DataContext="{Binding SelectedDevice}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <Image Source="{Binding Driver.ImageSource}" Width="16" Margin="2, 0" />
                            <Label Content="{Binding Driver.Name}" FontWeight="Bold" VerticalAlignment="Center" />
                        </StackPanel>
                        <StackPanel Grid.Column="1" DataContext="{Binding PropertiesViewModel}" Orientation="Horizontal">
                            <Controls:ToggleButton Command="{Binding PropVisCommand}" ImageSource="/Controls;component/Images/devparameters.png" IsChecked="{Binding ParameterVis, Converter={StaticResource InverseBooleanConverter}}" Style="{StaticResource ToggleButtonImageStyle}" ToolTip="Информация об устройстве" Visibility="{Binding Choise, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <Controls:ToggleButton Command="{Binding ParamVisCommand}" ImageSource="/Controls;component/Images/adrparameters.png" IsChecked="{Binding ParameterVis}" Style="{StaticResource ToggleButtonImageStyle}" ToolTip="Параметры устройства" Visibility="{Binding Choise, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="40" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Views:PropertiesView Visibility="{Binding PropertiesViewModel.ParameterVis, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=true}" />
                            <Views:ParametersView DataContext="{Binding PropertiesViewModel}" Visibility="{Binding ParameterVis, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Grid>
                        <StackPanel Grid.Column="1" DataContext="{Binding PropertiesViewModel}">
                            <StackPanel IsEnabled="{Binding IsAuParametersReady}" Visibility="{Binding ParameterVis, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Controls:ToolBarButton Width="36" Height="36" Margin="0,0,0,-8" Command="{Binding Context.DeviceCommandsViewModel.DeviceCommandsAuParametersViewModel.GetConfigurationParametersCommand}" ImageSource="/Controls;component/Images/readconfig.png" ToolTip="Считать параметры устройства" Visibility="{Binding Device.Driver.HasConfigurationProperties, Converter={StaticResource BoolToVisibilityConverter}}" />
                                <Controls:ToolBarButton Width="36" Height="36" Margin="0,0,0,-8" Command="{Binding Context.DeviceCommandsViewModel.DeviceCommandsAuParametersViewModel.SetConfigurationParametersCommand}" ImageSource="/Controls;component/Images/writeconfig.png" ToolTip="Записать параметры на устройство" Visibility="{Binding Device.Driver.HasConfigurationProperties, Converter={StaticResource BoolToVisibilityConverter}}" />
                                <Controls:ToolBarButton Width="36" Height="36" Command="{Binding Context.DeviceCommandsViewModel.DeviceCommandsAuParametersViewModel.ResetConfigurationParametersCommand}" ImageSource="/Controls;component/Images/defconfig.png" ToolTip="Параметры по умолчанию" Visibility="{Binding Device.Driver.HasConfigurationProperties, Converter={StaticResource BoolToVisibilityConverter}}" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>
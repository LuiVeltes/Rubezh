<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ribbon="clr-namespace:Controls.Ribbon.Views" xmlns:converters="clr-namespace:Controls.Converters">
	<converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
	<converters:NullToImageConverter x:Key="NullToImageConverter" />
	
	<Style TargetType="{x:Type ribbon:RibbonMenuItemView}">
		<Setter Property="Height" Value="30" />
		<Setter Property="MinWidth" Value="40" />
		<Setter Property="IsSelected" Value="False" />
		<Setter Property="Content" Value="{Binding Content}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ribbon:RibbonMenuItemView}">
					<ToggleButton x:Name="button" Command="{Binding Command}" CommandParameter="{Binding CommandParameter}" IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{x:Null}">
						<ToggleButton.Template>
							<ControlTemplate TargetType="{x:Type ToggleButton}">
								<ContentPresenter />
							</ControlTemplate>
						</ToggleButton.Template>
						<Border Name="border" Margin="2" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2" Padding="1" ToolTip="{Binding ToolTip}" ToolTipService.ShowOnDisabled="True" Visibility="{TemplateBinding Visibility}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="30" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="20" />
								</Grid.ColumnDefinitions>
								<Image Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding ImageSource, Converter={StaticResource NullToImageConverter}}" />
								<TextBlock Grid.Column="1" Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Text}" />
								<Image Grid.Column="2" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" Source="/Controls;component/Images/Arrow-left-right.png" Visibility="{Binding HasContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
							</Grid>
						</Border>
					</ToggleButton>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Border.Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
							<Setter TargetName="border" Property="Border.BorderBrush" Value="{DynamicResource PressedBackgroundBrush}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="border" Property="Border.Background" Value="{DynamicResource PressedBackgroundBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Opacity" Value="0.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
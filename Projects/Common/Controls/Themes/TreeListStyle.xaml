<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:converters="clr-namespace:Controls.TreeList.Converters" xmlns:tree="clr-namespace:Controls.TreeList">

	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Width" Value="19" />
		<Setter Property="Height" Value="13" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border Background="Transparent">
						<Path x:Name="CheckMark" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Gray" UseLayoutRounding="False" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource HighlightedBackgoundBrush}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="False">
							<Setter TargetName="CheckMark" Property="Data" Value="M6,2 L10,2 L10,-2 L12,-2 L12,2 L16,2 L16,4 L12,4 L12,8 L10,8 L10,4 L6,4 L6,2 z" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="CheckMark" Property="Data" Value="M6,2 L16,2 L16,4 L6,4 z" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<converters:LevelToIndentConverter x:Key="LevelToIndentConverter" />
	<converters:CanExpandConverter x:Key="CanExpandConverter" />

	<Style TargetType="{x:Type tree:RowExpander}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type tree:RowExpander}">
					<ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}}" IsChecked="{Binding IsExpanded, Mode=TwoWay}" Visibility="{Binding IsExpandable, Converter={StaticResource CanExpandConverter}}" ClickMode="Press" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<Style TargetType="{x:Type tree:TreeList}" BasedOn="{StaticResource {x:Type ListView}}" />
	<Style TargetType="{x:Type tree:TreeListItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
		<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
	</Style>-->

</ResourceDictionary>
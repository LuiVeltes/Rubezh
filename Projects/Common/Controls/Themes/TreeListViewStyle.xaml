<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:Controls" xmlns:Converters="clr-namespace:Controls.Converters" xmlns:s="clr-namespace:System;assembly=mscorlib">

	<Converters:LevelToIndentConverter x:Key="LevelToIndentConverter" />

	<Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type Controls:TreeListViewItem}">
		<Setter Property="Panel.Background" Value="#00FFFFFF" />
		<Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=ItemsControl}}" />
		<Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=ItemsControl}}" />
		<Setter Property="Control.Padding" Value="1,0,0,0" />
		<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="BorderBrush" Value="LightGray" />
		<Setter Property="FrameworkElement.FocusVisualStyle">
			<Setter.Value>
				<Style TargetType="IFrameworkInputElement">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="Controls:TreeListViewItem">
					<StackPanel>
						<Border Name="Bd" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
							<Controls:TreeGridViewRowPresenter x:Name="PART_Header" Height="{Binding Path=RowHeight, RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeListView}}}" Columns="{Binding Path=Columns, RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeListView}}}" Content="{TemplateBinding Header}" FirstColumnIndent="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeListViewItem}}, ConverterParameter=19}">
								<Controls:TreeGridViewRowPresenter.Resources>
									<Style TargetType="{x:Type ContentPresenter}">
										<Setter Property="VerticalAlignment" Value="Center" />
									</Style>
								</Controls:TreeGridViewRowPresenter.Resources>
								<Controls:TreeGridViewRowPresenter.Expander>
									<Grid>
										<ToggleButton Name="Expander" Width="19" Height="18" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeListViewItem}}}">
											<ToggleButton.Style>
												<Style TargetType="ToggleButton">
													<Setter Property="UIElement.Focusable" Value="False" />
													<Setter Property="FrameworkElement.Width" Value="19" />
													<Setter Property="FrameworkElement.Height" Value="13" />
													<Setter Property="Control.Template">
														<Setter.Value>
															<ControlTemplate TargetType="ToggleButton">
																<Path x:Name="CheckMark" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Gray" UseLayoutRounding="False" />
																<ControlTemplate.Triggers>
																	<Trigger Property="IsChecked" Value="False">
																		<Setter TargetName="CheckMark" Property="Data" Value="M2,2 L14,7 L2,14 z" />
																	</Trigger>
																	<Trigger Property="IsChecked" Value="True">
																		<Setter TargetName="CheckMark" Property="Data" Value="M2,2 L14,2 L7,14 z" />
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</ToggleButton.Style>
										</ToggleButton>
									</Grid>
								</Controls:TreeGridViewRowPresenter.Expander>
							</Controls:TreeGridViewRowPresenter>
						</Border>
						<ItemsPresenter Name="ItemsHost" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="TreeViewItem.IsExpanded" Value="False">
							<Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}" />
						</Trigger>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter TargetName="Expander" Property="UIElement.Visibility" Value="{x:Static Visibility.Hidden}" />
						</Trigger>
						<Trigger Property="TreeViewItem.IsSelected" Value="True">
							<Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource PressedBackgroundBrush}" />
							<Setter Property="TextElement.Foreground" Value="White" />
						</Trigger>
						<!--
							<MultiTrigger>
							<MultiTrigger.Conditions>
							<Condition Property="TreeViewItem.IsSelected" Value="True" />
							<Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Panel.Opacity" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
							<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
							</MultiTrigger>
						-->
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ColumnHeaderViewStyle" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="TextBlock.FontSize" Value="12" />
		<Setter Property="TextBlock.FontWeight" Value="Bold" />
		<Setter Property="TextBlock.FontFamily" Value="Arial" />
		<Setter Property="Height" Value="30" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="BorderBrush" Value="{DynamicResource BackgroundBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,0" />
		<Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewColumnHeader">
					<Grid SnapsToDevicePixels="True">
						<Border Name="HeaderBorder" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}">
							<Grid>
								<Border Padding="{TemplateBinding Control.Padding}">
									<ContentPresenter Name="HeaderContent" Margin="0,0,0,1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
								</Border>
							</Grid>
						</Border>
						<Canvas>
							<Thumb Name="PART_HeaderGripper">
								<Thumb.Style>
									<Style TargetType="Thumb">
										<Style.Resources>
											<ResourceDictionary />
										</Style.Resources>
										<Setter Property="Canvas.Right" Value="-9" />
										<Setter Property="FrameworkElement.Width" Value="18" />
										<Setter Property="FrameworkElement.Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										<Setter Property="Control.Padding" Value="0,0,0,0" />
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate TargetType="Thumb">
													<Border Background="#00FFFFFF" Padding="{TemplateBinding Control.Padding}" />
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Thumb.Style>
							</Thumb>
						</Canvas>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
						</Trigger>
						<Trigger Property="ButtonBase.IsPressed" Value="True">
							<Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
							<Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Hidden" />
							<Setter TargetName="HeaderContent" Property="FrameworkElement.Margin" Value="1,1,0,0" />
						</Trigger>
						<Trigger Property="FrameworkElement.Height" Value="NaN">
							<Setter Property="FrameworkElement.MinHeight" Value="20" />
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Role" Value="Floating">
				<Setter Property="Opacity" Value="0.7" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Canvas Name="PART_FloatingHeaderCanvas">
								<Rectangle Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" Fill="#60000000" />
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Border Name="HeaderBorder" Background="{TemplateBinding Background}" BorderThickness="0,0,0,0" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="scroll">
		<Style.Resources>
			<Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
		</Style.Resources>
		<Setter Property="UIElement.Focusable" Value="False" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollViewer Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
							<GridViewHeaderRowPresenter ColumnHeaderContainerStyle="{StaticResource ColumnHeaderViewStyle}" Columns="{Binding Path=Columns, RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeListView}}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
						<ScrollContentPresenter Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.Column="0" CanContentScroll="{TemplateBinding CanContentScroll}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" KeyboardNavigation.DirectionalNavigation="Local" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<ScrollBar Name="PART_VerticalScrollBar" Grid.Row="1" Grid.Column="1" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
						<ScrollBar Name="PART_HorizontalScrollBar" Grid.Row="2" Grid.Column="0" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
						<DockPanel Grid.Row="2" Grid.Column="1" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" LastChildFill="false">
							<Rectangle Width="1" DockPanel.Dock="Left" Fill="White" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
							<Rectangle Height="1" DockPanel.Dock="Top" Fill="White" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
						</DockPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style BasedOn="{StaticResource {x:Type TreeView}}" TargetType="{x:Type Controls:TreeListView}">
		<Setter Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<Setter Property="Border.BorderBrush" Value="#00FFFFFF" />
		<Setter Property="Border.BorderThickness" Value="2,2,2,2" />
		<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="{x:Static ScrollBarVisibility.Auto}" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="{x:Static ScrollBarVisibility.Auto}" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="Controls:TreeListView">
					<Grid>
						<Border Name="Bd" Margin="1" Background="DarkGray" BorderThickness="0" CornerRadius="5" />
						<Grid>
							<Grid.OpacityMask>
								<VisualBrush Visual="{Binding Source={x:Reference Bd}}" />
							</Grid.OpacityMask>
							<ScrollViewer Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{StaticResource scroll}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
							</ScrollViewer>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>